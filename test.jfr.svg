<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1850" height="2902" onload="init(evt)" viewBox="0 0 1850 2902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1850.0" height="2902.0" fill="url(#background)"  />
<text id="title" x="925.00" y="24" >Started 2019-10-09 05:02:56 App args:org.gradle.launcher.daemon.bootstrap.GradleDaemon 5.5 </text>
<text id="details" x="10.00" y="2885" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1740.00" y="24" >Search</text>
<text id="matched" x="1740.00" y="2885" > </text>
<g id="frames">
<g >
<title>mock.MockApplication.runReadAction(Computable) (1 samples, 8.33%)</title><rect x="925.0" y="357" width="152.5" height="15.0" fill="rgb(236,134,54)" rx="2" ry="2" />
<text  x="928.00" y="367.5" >mock.MockApplicatio..</text>
</g>
<g >
<title>calls.CallResolver.lambda$computeTasksFromCandidatesAndResolvedCall$1(Collection, BasicCallResolutionContext, TracingStrategy) (5 samples, 41.67%)</title><rect x="925.0" y="1957" width="762.5" height="15.0" fill="rgb(215,114,16)" rx="2" ry="2" />
<text  x="928.00" y="1967.5" >calls.CallResolver.lambda$computeTasksFromCandidatesAndResolvedCall$1(Collection, BasicCallResolutionCont..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1621" width="152.5" height="15.0" fill="rgb(252,101,44)" rx="2" ry="2" />
<text  x="318.00" y="1631.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>calls.CandidateResolver.checkAllValueArguments(CallCandidateResolutionContext, ResolveArgumentsMode) (5 samples, 41.67%)</title><rect x="925.0" y="1861" width="762.5" height="15.0" fill="rgb(245,210,46)" rx="2" ry="2" />
<text  x="928.00" y="1871.5" >calls.CandidateResolver.checkAllValueArguments(CallCandidateResolutionContext, ResolveArgumentsMode)</text>
</g>
<g >
<title>impl.PsiBuilderImpl.getTreeBuilt() (1 samples, 8.33%)</title><rect x="1687.5" y="2245" width="152.5" height="15.0" fill="rgb(228,218,49)" rx="2" ry="2" />
<text  x="1690.50" y="2255.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>annotations.Annotations$DefaultImpls.hasAnnotation(Annotations, FqName) (2 samples, 16.67%)</title><rect x="10.0" y="1573" width="305.0" height="15.0" fill="rgb(241,223,54)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >annotations.Annotations$DefaultImpls.hasA..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$3.invoke(AbstractTypeConstructor$Supertypes) (1 samples, 8.33%)</title><rect x="10.0" y="1045" width="152.5" height="15.0" fill="rgb(251,185,25)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitReferenceExpression(KtReferenceExpression) (1 samples, 8.33%)</title><rect x="315.0" y="885" width="152.5" height="15.0" fill="rgb(213,105,49)" rx="2" ry="2" />
<text  x="318.00" y="895.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.AllUnderImportScope.computeImportedNames() (3 samples, 25.00%)</title><rect x="925.0" y="709" width="457.5" height="15.0" fill="rgb(221,60,7)" rx="2" ry="2" />
<text  x="928.00" y="719.5" >resolve.AllUnderImportScope.computeImportedNames()</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor.computeSupertypes() (1 samples, 8.33%)</title><rect x="162.5" y="1029" width="152.5" height="15.0" fill="rgb(238,52,21)" rx="2" ry="2" />
<text  x="165.50" y="1039.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1301" width="305.0" height="15.0" fill="rgb(231,225,6)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>source.CharTableImpl.doIntern(CharSequence, int, int) (1 samples, 8.33%)</title><rect x="315.0" y="37" width="152.5" height="15.0" fill="rgb(213,186,14)" rx="2" ry="2" />
<text  x="318.00" y="47.5" >source.CharTableImp..</text>
</g>
<g >
<title>creator.DaggerFactoryDescriptor.&lt;init&gt;(ClassDescriptor, ClassDescriptor, ComponentAnnotationDescriptor, ResolverContext) (1 samples, 8.33%)</title><rect x="772.5" y="2229" width="152.5" height="15.0" fill="rgb(239,215,39)" rx="2" ry="2" />
<text  x="775.50" y="2239.5" >creator.DaggerFacto..</text>
</g>
<g >
<title>scopes.MemberScopeKt.getDescriptorsFiltered(MemberScope, DescriptorKindFilter, Function1) (1 samples, 8.33%)</title><rect x="772.5" y="2165" width="152.5" height="15.0" fill="rgb(240,142,38)" rx="2" ry="2" />
<text  x="775.50" y="2175.5" >scopes.MemberScopeK..</text>
</g>
<g >
<title>tree.LazyParseablePsiElement.getFirstChild() (1 samples, 8.33%)</title><rect x="315.0" y="245" width="152.5" height="15.0" fill="rgb(210,189,43)" rx="2" ry="2" />
<text  x="318.00" y="255.5" >tree.LazyParseableP..</text>
</g>
<g >
<title>calls.CallResolver.resolveCollectionLiteralCallWithGivenDescriptor(ExpressionTypingContext, KtCollectionLiteralExpression, Call, Collection) (4 samples, 33.33%)</title><rect x="925.0" y="1573" width="610.0" height="15.0" fill="rgb(206,36,41)" rx="2" ry="2" />
<text  x="928.00" y="1583.5" >calls.CallResolver.resolveCollectionLiteralCallWithGivenDescriptor(ExpressionTypingC..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1605" width="152.5" height="15.0" fill="rgb(227,134,12)" rx="2" ry="2" />
<text  x="318.00" y="1615.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope.access$computeFunctions(DeserializedMemberScope, Name) (1 samples, 8.33%)</title><rect x="1535.0" y="1445" width="152.5" height="15.0" fill="rgb(218,219,41)" rx="2" ry="2" />
<text  x="1538.00" y="1455.5" >descriptors.Deseria..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Void) (1 samples, 8.33%)</title><rect x="772.5" y="1557" width="152.5" height="15.0" fill="rgb(234,153,54)" rx="2" ry="2" />
<text  x="775.50" y="1567.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitor.visitNamedDeclaration(KtNamedDeclaration, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1573" width="152.5" height="15.0" fill="rgb(241,12,47)" rx="2" ry="2" />
<text  x="318.00" y="1583.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>calls.CallExpressionResolver.getSimpleNameExpressionTypeInfo(KtSimpleNameExpression, Receiver, ASTNode, ExpressionTypingContext, DataFlowInfo) (4 samples, 33.33%)</title><rect x="925.0" y="1029" width="610.0" height="15.0" fill="rgb(248,127,40)" rx="2" ry="2" />
<text  x="928.00" y="1039.5" >calls.CallExpressionResolver.getSimpleNameExpressionTypeInfo(KtSimpleNameExpression,..</text>
</g>
<g >
<title>psi.KtValueArgument.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="315.0" y="677" width="152.5" height="15.0" fill="rgb(243,223,24)" rx="2" ry="2" />
<text  x="318.00" y="687.5" >psi.KtValueArgument..</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="709" width="152.5" height="15.0" fill="rgb(206,198,41)" rx="2" ry="2" />
<text  x="318.00" y="719.5" >impl.PsiElementBase..</text>
</g>
<g >
<title>tree.LazyParseableElement.ensureParsed() (1 samples, 8.33%)</title><rect x="1687.5" y="2341" width="152.5" height="15.0" fill="rgb(251,151,42)" rx="2" ry="2" />
<text  x="1690.50" y="2351.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>collect.ImmutableListMultimap$Builder.build() (1 samples, 8.33%)</title><rect x="162.5" y="533" width="152.5" height="15.0" fill="rgb(225,103,28)" rx="2" ry="2" />
<text  x="165.50" y="543.5" >collect.ImmutableLi..</text>
</g>
<g >
<title>protobuf.AbstractParser.parseDelimitedFrom(InputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1285" width="152.5" height="15.0" fill="rgb(239,209,19)" rx="2" ry="2" />
<text  x="1538.00" y="1295.5" >protobuf.AbstractPa..</text>
</g>
<g >
<title>psi.KtClassBody.accept(KtVisitor, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1893" width="457.5" height="15.0" fill="rgb(247,123,25)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" >psi.KtClassBody.accept(KtVisitor, Object)</text>
</g>
<g >
<title>psi.KtVisitor.visitArgument(KtValueArgument, Object) (1 samples, 8.33%)</title><rect x="315.0" y="613" width="152.5" height="15.0" fill="rgb(220,212,50)" rx="2" ry="2" />
<text  x="318.00" y="623.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtVisitor.visitNamedFunction(KtNamedFunction, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1637" width="152.5" height="15.0" fill="rgb(233,60,26)" rx="2" ry="2" />
<text  x="318.00" y="1647.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext) (4 samples, 33.33%)</title><rect x="925.0" y="1445" width="610.0" height="15.0" fill="rgb(208,157,31)" rx="2" ry="2" />
<text  x="928.00" y="1455.5" >expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext)</text>
</g>
<g >
<title>jvm.K2JVMCompiler.doExecute(K2JVMCompilerArguments, CompilerConfiguration, Disposable, KotlinPaths) (12 samples, 100.00%)</title><rect x="10.0" y="2677" width="1830.0" height="15.0" fill="rgb(253,15,7)" rx="2" ry="2" />
<text  x="13.00" y="2687.5" >jvm.K2JVMCompiler.doExecute(K2JVMCompilerArguments, CompilerConfiguration, Disposable, KotlinPaths)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(Object) (1 samples, 8.33%)</title><rect x="1535.0" y="1493" width="152.5" height="15.0" fill="rgb(240,109,2)" rx="2" ry="2" />
<text  x="1538.00" y="1503.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>calls.CallResolver.lambda$computeTasksAndResolveCall$0(NewResolutionOldInference$ResolutionKind, Name, BasicCallResolutionContext, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="933" width="610.0" height="15.0" fill="rgb(228,187,27)" rx="2" ry="2" />
<text  x="928.00" y="943.5" >calls.CallResolver.lambda$computeTasksAndResolveCall$0(NewResolutionOldInference$Res..</text>
</g>
<g >
<title>metadata.ProtoBuf$Function$1.parsePartialFrom(CodedInputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1221" width="152.5" height="15.0" fill="rgb(216,106,9)" rx="2" ry="2" />
<text  x="1538.00" y="1231.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver.resolveDoubleColonLHS$frontend(KtDoubleColonExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1285" width="610.0" height="15.0" fill="rgb(244,65,18)" rx="2" ry="2" />
<text  x="928.00" y="1295.5" >expressions.DoubleColonExpressionResolver.resolveDoubleColonLHS$frontend(KtDoubleCol..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$3.postCompute(Object) (1 samples, 8.33%)</title><rect x="10.0" y="1077" width="152.5" height="15.0" fill="rgb(213,92,9)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (5 samples, 41.67%)</title><rect x="925.0" y="1925" width="762.5" height="15.0" fill="rgb(232,46,51)" rx="2" ry="2" />
<text  x="928.00" y="1935.5" >calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Void) (3 samples, 25.00%)</title><rect x="10.0" y="2053" width="457.5" height="15.0" fill="rgb(230,114,14)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >psi.KtVisitorVoid.visitExpression(KtExpression, Void)</text>
</g>
<g >
<title>storage.StorageKt.getValue(NotNullLazyValue, Object, KProperty) (3 samples, 25.00%)</title><rect x="925.0" y="597" width="457.5" height="15.0" fill="rgb(234,165,52)" rx="2" ry="2" />
<text  x="928.00" y="607.5" >storage.StorageKt.getValue(NotNullLazyValue, Object, KProperty)</text>
</g>
<g >
<title>descriptors.LazyAnnotationDescriptor$allValueArguments$2.invoke() (5 samples, 41.67%)</title><rect x="925.0" y="2117" width="762.5" height="15.0" fill="rgb(216,34,3)" rx="2" ry="2" />
<text  x="928.00" y="2127.5" >descriptors.LazyAnnotationDescriptor$allValueArguments$2.invoke()</text>
</g>
<g >
<title>calls.CallResolver.computeTasksAndResolveCall(BasicCallResolutionContext, Name, TracingStrategy, NewResolutionOldInference$ResolutionKind) (4 samples, 33.33%)</title><rect x="925.0" y="965" width="610.0" height="15.0" fill="rgb(229,151,41)" rx="2" ry="2" />
<text  x="928.00" y="975.5" >calls.CallResolver.computeTasksAndResolveCall(BasicCallResolutionContext, Name, Trac..</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (3 samples, 25.00%)</title><rect x="10.0" y="1733" width="457.5" height="15.0" fill="rgb(225,16,14)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" >impl.PsiElementBase.acceptChildren(PsiElementVisitor)</text>
</g>
<g >
<title>internal.Intrinsics.areEqual(Object, Object) (2 samples, 16.67%)</title><rect x="467.5" y="2117" width="305.0" height="15.0" fill="rgb(228,55,43)" rx="2" ry="2" />
<text  x="470.50" y="2127.5" >internal.Intrinsics.areEqual(Object, Obje..</text>
</g>
<g >
<title>kotlin.SafePublicationLazyImpl.getValue() (3 samples, 25.00%)</title><rect x="925.0" y="757" width="457.5" height="15.0" fill="rgb(213,78,16)" rx="2" ry="2" />
<text  x="928.00" y="767.5" >kotlin.SafePublicationLazyImpl.getValue()</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope.packToByteArray(Map) (2 samples, 16.67%)</title><rect x="1077.5" y="469" width="305.0" height="15.0" fill="rgb(224,47,43)" rx="2" ry="2" />
<text  x="1080.50" y="479.5" >descriptors.DeserializedMemberScope.packT..</text>
</g>
<g >
<title>descriptors.LazyJavaPackageFragment$binaryClasses$2.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="437" width="152.5" height="15.0" fill="rgb(254,200,34)" rx="2" ry="2" />
<text  x="928.00" y="447.5" >descriptors.LazyJav..</text>
</g>
<g >
<title>tree.LazyParseableElement.lambda$ensureParsed$0(CharSequence) (1 samples, 8.33%)</title><rect x="1687.5" y="2309" width="152.5" height="15.0" fill="rgb(227,72,13)" rx="2" ry="2" />
<text  x="1690.50" y="2319.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>descriptors.LazyClassMemberScope.getContributedFunctions(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="2053" width="152.5" height="15.0" fill="rgb(250,165,26)" rx="2" ry="2" />
<text  x="775.50" y="2063.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedFunction(KtNamedFunction, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1669" width="152.5" height="15.0" fill="rgb(218,133,12)" rx="2" ry="2" />
<text  x="318.00" y="1679.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>impl.DebugUtil.performPsiModification(String, ThrowableRunnable) (1 samples, 8.33%)</title><rect x="1687.5" y="2325" width="152.5" height="15.0" fill="rgb(244,185,42)" rx="2" ry="2" />
<text  x="1690.50" y="2335.5" >impl.DebugUtil.perf..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (3 samples, 25.00%)</title><rect x="10.0" y="1797" width="457.5" height="15.0" fill="rgb(205,17,25)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" >psi.KtVisitorVoid.visitKtElement(KtElement, Void)</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSize(int, MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="421" width="152.5" height="15.0" fill="rgb(231,169,52)" rx="2" ry="2" />
<text  x="1080.50" y="431.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (1 samples, 8.33%)</title><rect x="315.0" y="309" width="152.5" height="15.0" fill="rgb(240,33,25)" rx="2" ry="2" />
<text  x="318.00" y="319.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolver.ComponentAnnotationDescriptor.&lt;init&gt;(ResolverContext, AnnotationDescriptor) (5 samples, 41.67%)</title><rect x="925.0" y="2229" width="762.5" height="15.0" fill="rgb(232,43,22)" rx="2" ry="2" />
<text  x="928.00" y="2239.5" >resolver.ComponentAnnotationDescriptor.&lt;init&gt;(ResolverContext, AnnotationDescriptor)</text>
</g>
<g >
<title>sequences.SequencesKt___SequencesKt.toCollection(Sequence, Collection) (1 samples, 8.33%)</title><rect x="1535.0" y="1381" width="152.5" height="15.0" fill="rgb(216,70,19)" rx="2" ry="2" />
<text  x="1538.00" y="1391.5" >sequences.Sequences..</text>
</g>
<g >
<title>kotlin.KotlinBinaryClassCache$Companion$getKotlinBinaryClassOrClassFileContent$aClass$1.compute() (1 samples, 8.33%)</title><rect x="925.0" y="341" width="152.5" height="15.0" fill="rgb(250,22,16)" rx="2" ry="2" />
<text  x="928.00" y="351.5" >kotlin.KotlinBinary..</text>
</g>
<g >
<title>scopes.MemberScope$DefaultImpls.getContributedClassifierIncludeDeprecated(MemberScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1429" width="152.5" height="15.0" fill="rgb(254,176,32)" rx="2" ry="2" />
<text  x="775.50" y="1439.5" >scopes.MemberScope$..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope.getContributedFunctions(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1535.0" y="1525" width="152.5" height="15.0" fill="rgb(213,17,53)" rx="2" ry="2" />
<text  x="1538.00" y="1535.5" >descriptors.Deseria..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (1 samples, 8.33%)</title><rect x="315.0" y="581" width="152.5" height="15.0" fill="rgb(227,110,31)" rx="2" ry="2" />
<text  x="318.00" y="591.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2261" width="457.5" height="15.0" fill="rgb(249,114,37)" rx="2" ry="2" />
<text  x="13.00" y="2271.5" >psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Object) (1 samples, 8.33%)</title><rect x="772.5" y="1749" width="152.5" height="15.0" fill="rgb(223,20,31)" rx="2" ry="2" />
<text  x="775.50" y="1759.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.LazyJavaPackageFragment$binaryClasses$2.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="453" width="152.5" height="15.0" fill="rgb(242,35,24)" rx="2" ry="2" />
<text  x="928.00" y="463.5" >descriptors.LazyJav..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="405" width="152.5" height="15.0" fill="rgb(218,36,54)" rx="2" ry="2" />
<text  x="318.00" y="415.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>tree.TreeElement.rawInsertAfterMeWithoutNotifications(TreeElement) (1 samples, 8.33%)</title><rect x="1687.5" y="2181" width="152.5" height="15.0" fill="rgb(217,60,46)" rx="2" ry="2" />
<text  x="1690.50" y="2191.5" >tree.TreeElement.ra..</text>
</g>
<g >
<title>calls.CallResolver.resolveFunctionCall(BasicCallResolutionContext) (5 samples, 41.67%)</title><rect x="925.0" y="2053" width="762.5" height="15.0" fill="rgb(230,153,15)" rx="2" ry="2" />
<text  x="928.00" y="2063.5" >calls.CallResolver.resolveFunctionCall(BasicCallResolutionContext)</text>
</g>
<g >
<title>psi.KtVisitor.visitLambdaExpression(KtLambdaExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="421" width="152.5" height="15.0" fill="rgb(239,114,49)" rx="2" ry="2" />
<text  x="318.00" y="431.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDotQualifiedExpression(KtDotQualifiedExpression) (1 samples, 8.33%)</title><rect x="315.0" y="1269" width="152.5" height="15.0" fill="rgb(244,100,39)" rx="2" ry="2" />
<text  x="318.00" y="1279.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>kotlinpoet.CodeBlock.toString() (2 samples, 16.67%)</title><rect x="467.5" y="2085" width="305.0" height="15.0" fill="rgb(244,98,54)" rx="2" ry="2" />
<text  x="470.50" y="2095.5" >kotlinpoet.CodeBlock.toString()</text>
</g>
<g >
<title>lazy.LazyImportScope$getClassifier$1.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="645" width="152.5" height="15.0" fill="rgb(244,40,37)" rx="2" ry="2" />
<text  x="165.50" y="655.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>calls.CallResolver.resolveSimpleProperty(BasicCallResolutionContext) (4 samples, 33.33%)</title><rect x="925.0" y="997" width="610.0" height="15.0" fill="rgb(231,182,46)" rx="2" ry="2" />
<text  x="928.00" y="1007.5" >calls.CallResolver.resolveSimpleProperty(BasicCallResolutionContext)</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1173" width="610.0" height="15.0" fill="rgb(241,94,27)" rx="2" ry="2" />
<text  x="928.00" y="1183.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTy..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1365" width="305.0" height="15.0" fill="rgb(219,195,4)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>descriptorUtil.DescriptorUtilsKt.getAllSuperclassesWithoutAny(ClassDescriptor) (2 samples, 16.67%)</title><rect x="10.0" y="1173" width="305.0" height="15.0" fill="rgb(215,213,4)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >descriptorUtil.DescriptorUtilsKt.getAllSu..</text>
</g>
<g >
<title>descriptors.JvmPackageScope.getKotlinScopes() (3 samples, 25.00%)</title><rect x="925.0" y="613" width="457.5" height="15.0" fill="rgb(248,72,0)" rx="2" ry="2" />
<text  x="928.00" y="623.5" >descriptors.JvmPackageScope.getKotlinScopes()</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassBody(KtClassBody, Void) (3 samples, 25.00%)</title><rect x="10.0" y="1861" width="457.5" height="15.0" fill="rgb(211,132,42)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" >psi.KtVisitorVoid.visitClassBody(KtClassBody, Void)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1541" width="152.5" height="15.0" fill="rgb(210,8,39)" rx="2" ry="2" />
<text  x="318.00" y="1551.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>expressions.BasicExpressionTypingVisitor.visitClassLiteralExpression(KtClassLiteralExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1317" width="610.0" height="15.0" fill="rgb(242,20,28)" rx="2" ry="2" />
<text  x="928.00" y="1327.5" >expressions.BasicExpressionTypingVisitor.visitClassLiteralExpression(KtClassLiteralE..</text>
</g>
<g >
<title>metadata.ProtoBuf$Type$Argument.getSerializedSize() (1 samples, 8.33%)</title><rect x="1077.5" y="293" width="152.5" height="15.0" fill="rgb(220,97,48)" rx="2" ry="2" />
<text  x="1080.50" y="303.5" >metadata.ProtoBuf$T..</text>
</g>
<g >
<title>calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionContext, Collection, TracingStrategy) (5 samples, 41.67%)</title><rect x="925.0" y="1989" width="762.5" height="15.0" fill="rgb(240,84,32)" rx="2" ry="2" />
<text  x="928.00" y="1999.5" >calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionContext, Collection, Trac..</text>
</g>
<g >
<title>psi.KtLambdaExpression.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="315.0" y="485" width="152.5" height="15.0" fill="rgb(219,87,12)" rx="2" ry="2" />
<text  x="318.00" y="495.5" >psi.KtLambdaExpress..</text>
</g>
<g >
<title>impl.PsiBuilderImpl.buildTree() (1 samples, 8.33%)</title><rect x="1687.5" y="2229" width="152.5" height="15.0" fill="rgb(234,42,34)" rx="2" ry="2" />
<text  x="1690.50" y="2239.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>tree.LazyParseableElement.getFirstChildNode() (1 samples, 8.33%)</title><rect x="1687.5" y="2373" width="152.5" height="15.0" fill="rgb(212,73,17)" rx="2" ry="2" />
<text  x="1690.50" y="2383.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>psi.KtClassLiteralExpression.accept(KtVisitor, Object) (4 samples, 33.33%)</title><rect x="925.0" y="1365" width="610.0" height="15.0" fill="rgb(218,85,46)" rx="2" ry="2" />
<text  x="928.00" y="1375.5" >psi.KtClassLiteralExpression.accept(KtVisitor, Object)</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (3 samples, 25.00%)</title><rect x="10.0" y="1925" width="457.5" height="15.0" fill="rgb(240,164,0)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" >impl.PsiElementBase.acceptChildren(PsiElementVisitor)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(Object) (2 samples, 16.67%)</title><rect x="10.0" y="1493" width="305.0" height="15.0" fill="rgb(228,150,11)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >storage.LockBasedStorageManager$MapBasedM..</text>
</g>
<g >
<title>psi.KtVisitor.visitNamedDeclaration(KtNamedDeclaration, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2149" width="457.5" height="15.0" fill="rgb(251,180,19)" rx="2" ry="2" />
<text  x="13.00" y="2159.5" >psi.KtVisitor.visitNamedDeclaration(KtNamedDeclaration, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2069" width="457.5" height="15.0" fill="rgb(247,1,5)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >psi.KtVisitorVoid.visitExpression(KtExpression, Object)</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.getContributedFunctions(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="2037" width="152.5" height="15.0" fill="rgb(247,140,28)" rx="2" ry="2" />
<text  x="775.50" y="2047.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="1333" width="152.5" height="15.0" fill="rgb(233,227,21)" rx="2" ry="2" />
<text  x="318.00" y="1343.5" >psi.KtElementImplSt..</text>
</g>
<g >
<title>tower.NewResolutionOldInference.runResolution(BasicCallResolutionContext, Name, NewResolutionOldInference$ResolutionKind, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="885" width="610.0" height="15.0" fill="rgb(243,224,46)" rx="2" ry="2" />
<text  x="928.00" y="895.5" >tower.NewResolutionOldInference.runResolution(BasicCallResolutionContext, Name, NewR..</text>
</g>
<g >
<title>psi.KtVisitor.visitQualifiedExpression(KtQualifiedExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1189" width="152.5" height="15.0" fill="rgb(221,189,51)" rx="2" ry="2" />
<text  x="318.00" y="1199.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>kotlinpoet.FileSpec.writeTo(File) (2 samples, 16.67%)</title><rect x="467.5" y="2245" width="305.0" height="15.0" fill="rgb(213,120,15)" rx="2" ry="2" />
<text  x="470.50" y="2255.5" >kotlinpoet.FileSpec.writeTo(File)</text>
</g>
<g >
<title>annotations.AnnotationUtilKt.argumentValue(AnnotationDescriptor, String) (5 samples, 41.67%)</title><rect x="925.0" y="2197" width="762.5" height="15.0" fill="rgb(211,153,30)" rx="2" ry="2" />
<text  x="928.00" y="2207.5" >annotations.AnnotationUtilKt.argumentValue(AnnotationDescriptor, String)</text>
</g>
<g >
<title>common.CLITool.exec(PrintStream, Services, MessageRenderer, String[]) (12 samples, 100.00%)</title><rect x="10.0" y="2757" width="1830.0" height="15.0" fill="rgb(238,175,26)" rx="2" ry="2" />
<text  x="13.00" y="2767.5" >common.CLITool.exec(PrintStream, Services, MessageRenderer, String[])</text>
</g>
<g >
<title>resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(DeclarationDescriptor, LexicalScope, KtNamedFunction, BindingTrace, DataFlowInfo) (1 samples, 8.33%)</title><rect x="772.5" y="1925" width="152.5" height="15.0" fill="rgb(235,139,24)" rx="2" ry="2" />
<text  x="775.50" y="1935.5" >resolve.FunctionDes..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext, KtVisitor) (5 samples, 41.67%)</title><rect x="925.0" y="1781" width="762.5" height="15.0" fill="rgb(235,215,33)" rx="2" ry="2" />
<text  x="928.00" y="1791.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext, KtVisitor)</text>
</g>
<g >
<title>collect.ImmutableMultimap$Builder.build() (1 samples, 8.33%)</title><rect x="162.5" y="517" width="152.5" height="15.0" fill="rgb(230,130,18)" rx="2" ry="2" />
<text  x="165.50" y="527.5" >collect.ImmutableMu..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (5 samples, 41.67%)</title><rect x="925.0" y="1973" width="762.5" height="15.0" fill="rgb(212,223,42)" rx="2" ry="2" />
<text  x="928.00" y="1983.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver.visitClassLiteralExpression(KtClassLiteralExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1301" width="610.0" height="15.0" fill="rgb(252,103,36)" rx="2" ry="2" />
<text  x="928.00" y="1311.5" >expressions.DoubleColonExpressionResolver.visitClassLiteralExpression(KtClassLiteral..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSizeNoTag(MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="309" width="152.5" height="15.0" fill="rgb(254,73,20)" rx="2" ry="2" />
<text  x="1080.50" y="319.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Void) (1 samples, 8.33%)</title><rect x="772.5" y="1733" width="152.5" height="15.0" fill="rgb(218,14,46)" rx="2" ry="2" />
<text  x="775.50" y="1743.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>lazy.ExplicitImportsIndexed.importsForName(Name) (1 samples, 8.33%)</title><rect x="162.5" y="613" width="152.5" height="15.0" fill="rgb(232,41,12)" rx="2" ry="2" />
<text  x="165.50" y="623.5" >lazy.ExplicitImport..</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$inheritanceScopeWithoutMe$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1189" width="305.0" height="15.0" fill="rgb(233,86,38)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>kotlin.FileBasedKotlinClass.create(byte[], Function4) (1 samples, 8.33%)</title><rect x="925.0" y="245" width="152.5" height="15.0" fill="rgb(229,162,51)" rx="2" ry="2" />
<text  x="928.00" y="255.5" >kotlin.FileBasedKot..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeProjections(TypeResolutionContext, TypeConstructor, List) (1 samples, 8.33%)</title><rect x="772.5" y="1669" width="152.5" height="15.0" fill="rgb(229,59,13)" rx="2" ry="2" />
<text  x="775.50" y="1679.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>resolve.DescriptorResolver.resolveSupertypes(LexicalScope, ClassDescriptor, KtPureClassOrObject, BindingTrace) (1 samples, 8.33%)</title><rect x="162.5" y="1013" width="152.5" height="15.0" fill="rgb(205,130,2)" rx="2" ry="2" />
<text  x="165.50" y="1023.5" >resolve.DescriptorR..</text>
</g>
<g >
<title>kotlin.VirtualFileKotlinClass$Factory.create(VirtualFile, byte[]) (1 samples, 8.33%)</title><rect x="925.0" y="309" width="152.5" height="15.0" fill="rgb(227,39,35)" rx="2" ry="2" />
<text  x="928.00" y="319.5" >kotlin.VirtualFileK..</text>
</g>
<g >
<title>kotlin.KotlinBinaryClassCache$Companion$getKotlinBinaryClassOrClassFileContent$aClass$1.compute() (1 samples, 8.33%)</title><rect x="925.0" y="325" width="152.5" height="15.0" fill="rgb(216,103,52)" rx="2" ry="2" />
<text  x="928.00" y="335.5" >kotlin.KotlinBinary..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1557" width="152.5" height="15.0" fill="rgb(213,130,29)" rx="2" ry="2" />
<text  x="318.00" y="1567.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (11 samples, 91.67%)</title><rect x="10.0" y="2373" width="1677.5" height="15.0" fill="rgb(231,104,51)" rx="2" ry="2" />
<text  x="13.00" y="2383.5" >psi.KtElementImplStub.accept(PsiElementVisitor)</text>
</g>
<g >
<title>descriptorUtil.DescriptorUtilsKt.getSuperClassNotAny(ClassDescriptor) (2 samples, 16.67%)</title><rect x="10.0" y="1157" width="305.0" height="15.0" fill="rgb(223,83,43)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >descriptorUtil.DescriptorUtilsKt.getSuper..</text>
</g>
<g >
<title>psi.KtVisitor.visitDeclaration(KtDeclaration, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2085" width="457.5" height="15.0" fill="rgb(220,75,31)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" >psi.KtVisitor.visitDeclaration(KtDeclaration, Object)</text>
</g>
<g >
<title>psi.KtVisitor.visitDeclaration(KtDeclaration, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1509" width="152.5" height="15.0" fill="rgb(231,96,38)" rx="2" ry="2" />
<text  x="318.00" y="1519.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeElement(TypeResolutionContext, Annotations, KtModifierList, KtTypeElement) (1 samples, 8.33%)</title><rect x="162.5" y="933" width="152.5" height="15.0" fill="rgb(251,158,38)" rx="2" ry="2" />
<text  x="165.50" y="943.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>tower.NewResolutionOldInference.runResolutionForGivenCandidates(BasicCallResolutionContext, TracingStrategy, Collection) (5 samples, 41.67%)</title><rect x="925.0" y="1909" width="762.5" height="15.0" fill="rgb(207,211,27)" rx="2" ry="2" />
<text  x="928.00" y="1919.5" >tower.NewResolutionOldInference.runResolutionForGivenCandidates(BasicCallResolutionContext, TracingStrate..</text>
</g>
<g >
<title>annotations.Annotations$DefaultImpls.findAnnotation(Annotations, FqName) (2 samples, 16.67%)</title><rect x="10.0" y="1541" width="305.0" height="15.0" fill="rgb(231,76,40)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >annotations.Annotations$DefaultImpls.find..</text>
</g>
<g >
<title>sequences.SequencesKt___SequencesKt.toMutableList(Sequence) (1 samples, 8.33%)</title><rect x="1535.0" y="1397" width="152.5" height="15.0" fill="rgb(242,105,38)" rx="2" ry="2" />
<text  x="1538.00" y="1407.5" >sequences.Sequences..</text>
</g>
<g >
<title>lazy.LazyImportScope.definitelyDoesNotContainName(Name) (3 samples, 25.00%)</title><rect x="925.0" y="805" width="457.5" height="15.0" fill="rgb(215,57,8)" rx="2" ry="2" />
<text  x="928.00" y="815.5" >lazy.LazyImportScope.definitelyDoesNotContainName(Name)</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (1 samples, 8.33%)</title><rect x="315.0" y="1045" width="152.5" height="15.0" fill="rgb(210,135,35)" rx="2" ry="2" />
<text  x="318.00" y="1055.5" >psi.KtTreeVisitorVo..</text>
</g>
<g >
<title>scopes.ResolutionScope$DefaultImpls.getContributedClassifierIncludeDeprecated(ResolutionScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1413" width="152.5" height="15.0" fill="rgb(254,194,2)" rx="2" ry="2" />
<text  x="775.50" y="1423.5" >scopes.ResolutionSc..</text>
</g>
<g >
<title>tower.TowerResolver.run(ImplicitScopeTower, ScopeTowerProcessor, TowerResolver$ResultCollector, boolean, Name) (4 samples, 33.33%)</title><rect x="925.0" y="853" width="610.0" height="15.0" fill="rgb(217,214,47)" rx="2" ry="2" />
<text  x="928.00" y="863.5" >tower.TowerResolver.run(ImplicitScopeTower, ScopeTowerProcessor, TowerResolver$Resul..</text>
</g>
<g >
<title>scopes.LexicalChainedScope.getContributedClassifierIncludeDeprecated(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1461" width="152.5" height="15.0" fill="rgb(228,19,44)" rx="2" ry="2" />
<text  x="775.50" y="1471.5" >scopes.LexicalChain..</text>
</g>
<g >
<title>kotlin.KotlinBinaryClassCache$Companion.getKotlinBinaryClassOrClassFileContent(VirtualFile, byte[]) (1 samples, 8.33%)</title><rect x="925.0" y="373" width="152.5" height="15.0" fill="rgb(219,86,14)" rx="2" ry="2" />
<text  x="928.00" y="383.5" >kotlin.KotlinBinary..</text>
</g>
<g >
<title>utils.DFS.dfs(Collection, DFS$Neighbors, DFS$Visited, DFS$NodeHandler) (1 samples, 8.33%)</title><rect x="10.0" y="981" width="152.5" height="15.0" fill="rgb(223,114,31)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >utils.DFS.dfs(Colle..</text>
</g>
<g >
<title>kotlin.LambdaExpressionElementType.parseContents(ASTNode) (1 samples, 8.33%)</title><rect x="315.0" y="165" width="152.5" height="15.0" fill="rgb(252,103,9)" rx="2" ry="2" />
<text  x="318.00" y="175.5" >kotlin.LambdaExpres..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="1989" width="152.5" height="15.0" fill="rgb(236,160,21)" rx="2" ry="2" />
<text  x="775.50" y="1999.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2197" width="457.5" height="15.0" fill="rgb(243,45,40)" rx="2" ry="2" />
<text  x="13.00" y="2207.5" >psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Ob..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="1509" width="610.0" height="15.0" fill="rgb(232,51,26)" rx="2" ry="2" />
<text  x="928.00" y="1519.5" >calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallR..</text>
</g>
<g >
<title>descriptors.JvmPackageScope$kotlinScopes$2.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="549" width="457.5" height="15.0" fill="rgb(248,39,6)" rx="2" ry="2" />
<text  x="928.00" y="559.5" >descriptors.JvmPackageScope$kotlinScopes$2.invoke()</text>
</g>
<g >
<title>lazy.LazyImportScope$getClassifier$1.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="661" width="152.5" height="15.0" fill="rgb(216,163,37)" rx="2" ry="2" />
<text  x="165.50" y="671.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>kotlinpoet.TypeSpec.emit$kotlinpoet(CodeWriter, String, boolean) (2 samples, 16.67%)</title><rect x="467.5" y="2149" width="305.0" height="15.0" fill="rgb(224,105,26)" rx="2" ry="2" />
<text  x="470.50" y="2159.5" >kotlinpoet.TypeSpec.emit$kotlinpoet(CodeW..</text>
</g>
<g >
<title>calls.CallExpressionResolver.getSimpleNameExpressionTypeInfo(KtSimpleNameExpression, Receiver, ASTNode, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1045" width="610.0" height="15.0" fill="rgb(212,96,34)" rx="2" ry="2" />
<text  x="928.00" y="1055.5" >calls.CallExpressionResolver.getSimpleNameExpressionTypeInfo(KtSimpleNameExpression,..</text>
</g>
<g >
<title>kotlinpoet.CodeWriter.&lt;init&gt;(Appendable, String, Map, Map, Map, int) (1 samples, 8.33%)</title><rect x="467.5" y="2053" width="152.5" height="15.0" fill="rgb(240,158,49)" rx="2" ry="2" />
<text  x="470.50" y="2063.5" >kotlinpoet.CodeWrit..</text>
</g>
<g >
<title>resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(Function5, DeclarationDescriptor, LexicalScope, KtNamedFunction, BindingTrace, DataFlowInfo, KotlinType) (1 samples, 8.33%)</title><rect x="772.5" y="1909" width="152.5" height="15.0" fill="rgb(247,64,4)" rx="2" ry="2" />
<text  x="775.50" y="1919.5" >resolve.FunctionDes..</text>
</g>
<g >
<title>descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke() (1 samples, 8.33%)</title><rect x="772.5" y="2101" width="152.5" height="15.0" fill="rgb(213,33,12)" rx="2" ry="2" />
<text  x="775.50" y="2111.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1157" width="152.5" height="15.0" fill="rgb(231,19,39)" rx="2" ry="2" />
<text  x="318.00" y="1167.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>kotlinpoet.TypeSpec.emit$kotlinpoet$default(TypeSpec, CodeWriter, String, boolean, int, Object) (2 samples, 16.67%)</title><rect x="467.5" y="2181" width="305.0" height="15.0" fill="rgb(230,170,2)" rx="2" ry="2" />
<text  x="470.50" y="2191.5" >kotlinpoet.TypeSpec.emit$kotlinpoet$defau..</text>
</g>
<g >
<title>kotlinpoet.CodeWriter.&lt;init&gt;(Appendable, String, Map, Map, Map, int, int, DefaultConstructorMarker) (1 samples, 8.33%)</title><rect x="467.5" y="2069" width="152.5" height="15.0" fill="rgb(253,201,17)" rx="2" ry="2" />
<text  x="470.50" y="2079.5" >kotlinpoet.CodeWrit..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (1 samples, 8.33%)</title><rect x="315.0" y="277" width="152.5" height="15.0" fill="rgb(223,176,17)" rx="2" ry="2" />
<text  x="318.00" y="287.5" >psi.KtTreeVisitorVo..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="901" width="610.0" height="15.0" fill="rgb(254,79,20)" rx="2" ry="2" />
<text  x="928.00" y="911.5" >calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$Resolution..</text>
</g>
<g >
<title>resolve.SupertypeLoopCheckerImpl.findLoopsInSupertypesAndDisconnect(TypeConstructor, Collection, Function1, Function1) (1 samples, 8.33%)</title><rect x="10.0" y="1029" width="152.5" height="15.0" fill="rgb(218,152,44)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >resolve.SupertypeLo..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor$1.getScope() (2 samples, 16.67%)</title><rect x="10.0" y="1429" width="305.0" height="15.0" fill="rgb(237,43,53)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >descriptors.LazyClassDescriptor$1.getScop..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope$computeDescriptors$$inlined$let$lambda$1.invoke() (1 samples, 8.33%)</title><rect x="1535.0" y="1333" width="152.5" height="15.0" fill="rgb(205,166,33)" rx="2" ry="2" />
<text  x="1538.00" y="1343.5" >descriptors.Deseria..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="2005" width="152.5" height="15.0" fill="rgb(218,226,12)" rx="2" ry="2" />
<text  x="775.50" y="2015.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>tree.LazyParseablePsiElement.acceptChildren(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="261" width="152.5" height="15.0" fill="rgb(236,154,36)" rx="2" ry="2" />
<text  x="318.00" y="271.5" >tree.LazyParseableP..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (5 samples, 41.67%)</title><rect x="925.0" y="2149" width="762.5" height="15.0" fill="rgb(241,210,3)" rx="2" ry="2" />
<text  x="928.00" y="2159.5" >storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke()</text>
</g>
<g >
<title>utils.DFS.doDfs(Object, DFS$Neighbors, DFS$Visited, DFS$NodeHandler) (1 samples, 8.33%)</title><rect x="10.0" y="965" width="152.5" height="15.0" fill="rgb(236,59,4)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >utils.DFS.doDfs(Obj..</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$inheritanceScopeWithoutMe$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1205" width="305.0" height="15.0" fill="rgb(224,199,4)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$3.invoke(Object) (1 samples, 8.33%)</title><rect x="10.0" y="1061" width="152.5" height="15.0" fill="rgb(252,66,16)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>psi.KtClass.accept(KtVisitor, Object) (11 samples, 91.67%)</title><rect x="10.0" y="2357" width="1677.5" height="15.0" fill="rgb(248,128,48)" rx="2" ry="2" />
<text  x="13.00" y="2367.5" >psi.KtClass.accept(KtVisitor, Object)</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$1.invoke() (1 samples, 8.33%)</title><rect x="10.0" y="805" width="152.5" height="15.0" fill="rgb(227,166,37)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>tree.CompositeElement.rawAddChildrenWithoutNotifications(TreeElement) (1 samples, 8.33%)</title><rect x="1687.5" y="2197" width="152.5" height="15.0" fill="rgb(240,93,48)" rx="2" ry="2" />
<text  x="1690.50" y="2207.5" >tree.CompositeEleme..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="293" width="152.5" height="15.0" fill="rgb(228,141,36)" rx="2" ry="2" />
<text  x="318.00" y="303.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1717" width="762.5" height="15.0" fill="rgb(224,140,31)" rx="2" ry="2" />
<text  x="928.00" y="1727.5" >psi.KtVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitArgument(KtValueArgument) (1 samples, 8.33%)</title><rect x="315.0" y="629" width="152.5" height="15.0" fill="rgb(212,213,48)" rx="2" ry="2" />
<text  x="318.00" y="639.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>tower.TowerResolver$Task.run() (4 samples, 33.33%)</title><rect x="925.0" y="837" width="610.0" height="15.0" fill="rgb(236,123,22)" rx="2" ry="2" />
<text  x="928.00" y="847.5" >tower.TowerResolver$Task.run()</text>
</g>
<g >
<title>kotlinpoet.FileSpec.emit(CodeWriter) (2 samples, 16.67%)</title><rect x="467.5" y="2197" width="305.0" height="15.0" fill="rgb(211,137,33)" rx="2" ry="2" />
<text  x="470.50" y="2207.5" >kotlinpoet.FileSpec.emit(CodeWriter)</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="549" width="152.5" height="15.0" fill="rgb(212,218,15)" rx="2" ry="2" />
<text  x="318.00" y="559.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtVisitor.visitClassBody(KtClassBody, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1829" width="457.5" height="15.0" fill="rgb(216,227,31)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" >psi.KtVisitor.visitClassBody(KtClassBody, Object)</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.doGetFunctions(Name) (1 samples, 8.33%)</title><rect x="772.5" y="1941" width="152.5" height="15.0" fill="rgb(229,171,23)" rx="2" ry="2" />
<text  x="775.50" y="1951.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>sequences.SequencesKt___SequencesKt.toList(Sequence) (1 samples, 8.33%)</title><rect x="1535.0" y="1413" width="152.5" height="15.0" fill="rgb(230,50,49)" rx="2" ry="2" />
<text  x="1538.00" y="1423.5" >sequences.Sequences..</text>
</g>
<g >
<title>lazy.ExplicitImportsIndexed.getNameToDirectives() (1 samples, 8.33%)</title><rect x="162.5" y="597" width="152.5" height="15.0" fill="rgb(247,1,48)" rx="2" ry="2" />
<text  x="165.50" y="607.5" >lazy.ExplicitImport..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="772.5" y="1653" width="152.5" height="15.0" fill="rgb(227,99,46)" rx="2" ry="2" />
<text  x="775.50" y="1663.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveType(LexicalScope, KtTypeReference, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="772.5" y="1845" width="152.5" height="15.0" fill="rgb(207,221,34)" rx="2" ry="2" />
<text  x="775.50" y="1855.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>resolve.QualifiedExpressionResolver.resolveDescriptorForType(KtUserType, LexicalScope, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="772.5" y="1509" width="152.5" height="15.0" fill="rgb(225,82,6)" rx="2" ry="2" />
<text  x="775.50" y="1519.5" >resolve.QualifiedEx..</text>
</g>
<g >
<title>lazy.ExplicitImportsIndexed$nameToDirectives$2.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="565" width="152.5" height="15.0" fill="rgb(206,51,2)" rx="2" ry="2" />
<text  x="165.50" y="575.5" >lazy.ExplicitImport..</text>
</g>
<g >
<title>metadata.ProtoBuf$Function.&lt;init&gt;(CodedInputStream, ExtensionRegistryLite, ProtoBuf$1) (1 samples, 8.33%)</title><rect x="1535.0" y="1205" width="152.5" height="15.0" fill="rgb(234,89,34)" rx="2" ry="2" />
<text  x="1538.00" y="1215.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>tree.SharedImplUtil.acceptChildren(PsiElementVisitor, ASTNode) (12 samples, 100.00%)</title><rect x="10.0" y="2389" width="1830.0" height="15.0" fill="rgb(253,48,8)" rx="2" ry="2" />
<text  x="13.00" y="2399.5" >tree.SharedImplUtil.acceptChildren(PsiElementVisitor, ASTNode)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClass(KtClass, Object) (11 samples, 91.67%)</title><rect x="10.0" y="2341" width="1677.5" height="15.0" fill="rgb(246,108,52)" rx="2" ry="2" />
<text  x="13.00" y="2351.5" >psi.KtVisitorVoid.visitClass(KtClass, Object)</text>
</g>
<g >
<title>parsing.KotlinParser.parseLambdaExpression(PsiBuilder) (1 samples, 8.33%)</title><rect x="315.0" y="149" width="152.5" height="15.0" fill="rgb(208,213,46)" rx="2" ry="2" />
<text  x="318.00" y="159.5" >parsing.KotlinParse..</text>
</g>
<g >
<title>resolve.QualifiedExpressionResolver.resolveDescriptorForType(KtUserType, LexicalScope, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="162.5" y="821" width="152.5" height="15.0" fill="rgb(214,197,2)" rx="2" ry="2" />
<text  x="165.50" y="831.5" >resolve.QualifiedEx..</text>
</g>
<g >
<title>psi.KtElementImpl.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="1013" width="152.5" height="15.0" fill="rgb(245,33,16)" rx="2" ry="2" />
<text  x="318.00" y="1023.5" >psi.KtElementImpl.a..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="1349" width="152.5" height="15.0" fill="rgb(232,157,7)" rx="2" ry="2" />
<text  x="775.50" y="1359.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="1493" width="610.0" height="15.0" fill="rgb(213,26,9)" rx="2" ry="2" />
<text  x="928.00" y="1503.5" >calls.CallResolver.doResolveCall(BasicCallResolutionContext, CallResolver$Resolution..</text>
</g>
<g >
<title>expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext) (5 samples, 41.67%)</title><rect x="925.0" y="1813" width="762.5" height="15.0" fill="rgb(232,33,5)" rx="2" ry="2" />
<text  x="928.00" y="1823.5" >expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext)</text>
</g>
<g >
<title>descriptors.LazyAnnotationDescriptor.&lt;init&gt;(LazyAnnotationsContext, KtAnnotationEntry) (2 samples, 16.67%)</title><rect x="10.0" y="1445" width="305.0" height="15.0" fill="rgb(231,138,26)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >descriptors.LazyAnnotationDescriptor.&lt;ini..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="341" width="152.5" height="15.0" fill="rgb(249,143,5)" rx="2" ry="2" />
<text  x="318.00" y="351.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (1 samples, 8.33%)</title><rect x="315.0" y="773" width="152.5" height="15.0" fill="rgb(252,21,40)" rx="2" ry="2" />
<text  x="318.00" y="783.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.FunctionDescriptorResolver.createValueParameterDescriptors(KtFunction, SimpleFunctionDescriptorImpl, LexicalWritableScope, BindingTrace, KotlinType) (1 samples, 8.33%)</title><rect x="772.5" y="1877" width="152.5" height="15.0" fill="rgb(208,218,47)" rx="2" ry="2" />
<text  x="775.50" y="1887.5" >resolve.FunctionDes..</text>
</g>
<g >
<title>psi.KtVisitor.visitClass(KtClass, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2277" width="457.5" height="15.0" fill="rgb(205,157,23)" rx="2" ry="2" />
<text  x="13.00" y="2287.5" >psi.KtVisitor.visitClass(KtClass, Object)</text>
</g>
<g >
<title>lazy.LazyImportScope.getClassifier(LazyImportResolver, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="693" width="152.5" height="15.0" fill="rgb(243,200,32)" rx="2" ry="2" />
<text  x="165.50" y="703.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>expressions.BasicExpressionTypingVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, ExpressionTypingContext) (5 samples, 41.67%)</title><rect x="925.0" y="1621" width="762.5" height="15.0" fill="rgb(233,165,1)" rx="2" ry="2" />
<text  x="928.00" y="1631.5" >expressions.BasicExpressionTypingVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, ..</text>
</g>
<g >
<title>descriptors.LazyAnnotations.findAnnotation(FqName) (2 samples, 16.67%)</title><rect x="10.0" y="1557" width="305.0" height="15.0" fill="rgb(236,178,2)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >descriptors.LazyAnnotations.findAnnotatio..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(Name) (1 samples, 8.33%)</title><rect x="772.5" y="1973" width="152.5" height="15.0" fill="rgb(241,5,14)" rx="2" ry="2" />
<text  x="775.50" y="1983.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="772.5" y="1829" width="152.5" height="15.0" fill="rgb(240,84,14)" rx="2" ry="2" />
<text  x="775.50" y="1839.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>impl.PsiBuilderImpl.bind(PsiBuilderImpl$StartMarker, CompositeElement) (1 samples, 8.33%)</title><rect x="315.0" y="101" width="152.5" height="15.0" fill="rgb(224,145,44)" rx="2" ry="2" />
<text  x="318.00" y="111.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>calls.CallResolver.lambda$computeTasksFromCandidatesAndResolvedCall$1(Collection, BasicCallResolutionContext, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="1525" width="610.0" height="15.0" fill="rgb(230,119,9)" rx="2" ry="2" />
<text  x="928.00" y="1535.5" >calls.CallResolver.lambda$computeTasksFromCandidatesAndResolvedCall$1(Collection, Ba..</text>
</g>
<g >
<title>resolve.CollectionLiteralResolver.resolveCollectionLiteral(KtCollectionLiteralExpression, ExpressionTypingContext) (5 samples, 41.67%)</title><rect x="925.0" y="1605" width="762.5" height="15.0" fill="rgb(219,64,44)" rx="2" ry="2" />
<text  x="928.00" y="1615.5" >resolve.CollectionLiteralResolver.resolveCollectionLiteral(KtCollectionLiteralExpression, ExpressionTypin..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1173" width="152.5" height="15.0" fill="rgb(246,224,36)" rx="2" ry="2" />
<text  x="318.00" y="1183.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>asm.ClassReader.readUtf(int, int, char[]) (1 samples, 8.33%)</title><rect x="925.0" y="165" width="152.5" height="15.0" fill="rgb(223,129,33)" rx="2" ry="2" />
<text  x="928.00" y="175.5" >asm.ClassReader.rea..</text>
</g>
<g >
<title>psi.KtUserType.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="772.5" y="1765" width="152.5" height="15.0" fill="rgb(224,129,34)" rx="2" ry="2" />
<text  x="775.50" y="1775.5" >psi.KtUserType.acce..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="389" width="152.5" height="15.0" fill="rgb(210,83,11)" rx="2" ry="2" />
<text  x="318.00" y="399.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext, KtVisitor) (4 samples, 33.33%)</title><rect x="925.0" y="1413" width="610.0" height="15.0" fill="rgb(240,83,48)" rx="2" ry="2" />
<text  x="928.00" y="1423.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTy..</text>
</g>
<g >
<title>sequences.GeneratorSequence$iterator$1.hasNext() (1 samples, 8.33%)</title><rect x="1535.0" y="1365" width="152.5" height="15.0" fill="rgb(235,117,38)" rx="2" ry="2" />
<text  x="1538.00" y="1375.5" >sequences.Generator..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$1.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="1061" width="152.5" height="15.0" fill="rgb(205,121,24)" rx="2" ry="2" />
<text  x="165.50" y="1071.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>scopes.AbstractScopeAdapter.getContributedFunctions(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1535.0" y="1557" width="152.5" height="15.0" fill="rgb(212,190,24)" rx="2" ry="2" />
<text  x="1538.00" y="1567.5" >scopes.AbstractScop..</text>
</g>
<g >
<title>asm.ClassReader.accept(ClassVisitor, int) (1 samples, 8.33%)</title><rect x="925.0" y="229" width="152.5" height="15.0" fill="rgb(253,43,49)" rx="2" ry="2" />
<text  x="928.00" y="239.5" >asm.ClassReader.acc..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="853" width="152.5" height="15.0" fill="rgb(240,207,27)" rx="2" ry="2" />
<text  x="318.00" y="863.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>calls.ArgumentTypeResolver.analyzeArgumentsAndRecordTypes(CallResolutionContext, ResolveArgumentsMode) (4 samples, 33.33%)</title><rect x="925.0" y="1477" width="610.0" height="15.0" fill="rgb(206,224,1)" rx="2" ry="2" />
<text  x="928.00" y="1487.5" >calls.ArgumentTypeResolver.analyzeArgumentsAndRecordTypes(CallResolutionContext, Res..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext) (5 samples, 41.67%)</title><rect x="925.0" y="1797" width="762.5" height="15.0" fill="rgb(234,65,27)" rx="2" ry="2" />
<text  x="928.00" y="1807.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext)</text>
</g>
<g >
<title>compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(Project, Collection, BindingTrace, CompilerConfiguration, Function1, Function2, GlobalSearchScope, int, Object) (12 samples, 100.00%)</title><rect x="10.0" y="2581" width="1830.0" height="15.0" fill="rgb(230,137,2)" rx="2" ry="2" />
<text  x="13.00" y="2591.5" >compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(Project, Collection, BindingTrace, CompilerConfiguration, Function1, Function2, GlobalSearchScope, int, Object)</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$inheritanceScopeWithMe$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1269" width="305.0" height="15.0" fill="rgb(234,119,2)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="597" width="152.5" height="15.0" fill="rgb(225,189,35)" rx="2" ry="2" />
<text  x="318.00" y="607.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>asm.ClassReader.readUTF8(int, char[]) (1 samples, 8.33%)</title><rect x="925.0" y="197" width="152.5" height="15.0" fill="rgb(220,147,16)" rx="2" ry="2" />
<text  x="928.00" y="207.5" >asm.ClassReader.rea..</text>
</g>
<g >
<title>scopes.MemberScopeKt.computeAllNames(MemberScope) (3 samples, 25.00%)</title><rect x="925.0" y="693" width="457.5" height="15.0" fill="rgb(247,189,19)" rx="2" ry="2" />
<text  x="928.00" y="703.5" >scopes.MemberScopeKt.computeAllNames(MemberScope)</text>
</g>
<g >
<title>collect.ImmutableList.copyOf(Collection) (1 samples, 8.33%)</title><rect x="162.5" y="485" width="152.5" height="15.0" fill="rgb(245,136,5)" rx="2" ry="2" />
<text  x="165.50" y="495.5" >collect.ImmutableLi..</text>
</g>
<g >
<title>lazy.DeclarationScopeProviderImpl.getResolutionScopeForDeclaration(PsiElement) (2 samples, 16.67%)</title><rect x="10.0" y="1397" width="305.0" height="15.0" fill="rgb(223,179,29)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >lazy.DeclarationScopeProviderImpl.getReso..</text>
</g>
<g >
<title>resolve.TypeResolver.resolvePossiblyBareType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="772.5" y="1813" width="152.5" height="15.0" fill="rgb(216,178,36)" rx="2" ry="2" />
<text  x="775.50" y="1823.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>kotlinpoet.CodeWriter.emitCode(CodeBlock, boolean) (1 samples, 8.33%)</title><rect x="620.0" y="2053" width="152.5" height="15.0" fill="rgb(206,198,7)" rx="2" ry="2" />
<text  x="623.00" y="2063.5" >kotlinpoet.CodeWrit..</text>
</g>
<g >
<title>psi.KtVisitor.visitClassOrObject(KtClassOrObject, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2213" width="457.5" height="15.0" fill="rgb(220,64,1)" rx="2" ry="2" />
<text  x="13.00" y="2223.5" >psi.KtVisitor.visitClassOrObject(KtClassOrObject, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Void) (3 samples, 25.00%)</title><rect x="10.0" y="2117" width="457.5" height="15.0" fill="rgb(250,63,6)" rx="2" ry="2" />
<text  x="13.00" y="2127.5" >psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Void)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration) (3 samples, 25.00%)</title><rect x="10.0" y="2165" width="457.5" height="15.0" fill="rgb(223,213,38)" rx="2" ry="2" />
<text  x="13.00" y="2175.5" >psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration)</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext, KtVisitor) (4 samples, 33.33%)</title><rect x="925.0" y="1157" width="610.0" height="15.0" fill="rgb(253,175,52)" rx="2" ry="2" />
<text  x="928.00" y="1167.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTy..</text>
</g>
<g >
<title>lazy.ExplicitImportsIndexed$nameToDirectives$2.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="549" width="152.5" height="15.0" fill="rgb(249,26,50)" rx="2" ry="2" />
<text  x="165.50" y="559.5" >lazy.ExplicitImport..</text>
</g>
<g >
<title>psi.KtClass.accept(KtVisitor, Object) (2 samples, 16.67%)</title><rect x="10.0" y="1701" width="305.0" height="15.0" fill="rgb(242,52,35)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" >psi.KtClass.accept(KtVisitor, Object)</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="517" width="152.5" height="15.0" fill="rgb(212,3,28)" rx="2" ry="2" />
<text  x="318.00" y="527.5" >impl.PsiElementBase..</text>
</g>
<g >
<title>common.CLICompiler.execAndOutputXml(PrintStream, Services, String[]) (12 samples, 100.00%)</title><rect x="10.0" y="2773" width="1830.0" height="15.0" fill="rgb(230,137,14)" rx="2" ry="2" />
<text  x="13.00" y="2783.5" >common.CLICompiler.execAndOutputXml(PrintStream, Services, String[])</text>
</g>
<g >
<title>tree.IFileElementType.parseContents(ASTNode) (1 samples, 8.33%)</title><rect x="1687.5" y="2293" width="152.5" height="15.0" fill="rgb(216,56,28)" rx="2" ry="2" />
<text  x="1690.50" y="2303.5" >tree.IFileElementTy..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (1 samples, 8.33%)</title><rect x="772.5" y="2117" width="152.5" height="15.0" fill="rgb(234,83,4)" rx="2" ry="2" />
<text  x="775.50" y="2127.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>kotlin.VirtualFileKotlinClass$Factory$create$1.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="261" width="152.5" height="15.0" fill="rgb(219,167,21)" rx="2" ry="2" />
<text  x="928.00" y="271.5" >kotlin.VirtualFileK..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor.computeSupertypes() (1 samples, 8.33%)</title><rect x="10.0" y="773" width="152.5" height="15.0" fill="rgb(254,45,22)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtFile(KtFile, Object) (12 samples, 100.00%)</title><rect x="10.0" y="2453" width="1830.0" height="15.0" fill="rgb(250,6,50)" rx="2" ry="2" />
<text  x="13.00" y="2463.5" >psi.KtVisitor.visitKtFile(KtFile, Object)</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSize(int, MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="277" width="152.5" height="15.0" fill="rgb(227,219,17)" rx="2" ry="2" />
<text  x="1080.50" y="287.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtLambdaExpression.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="501" width="152.5" height="15.0" fill="rgb(221,54,20)" rx="2" ry="2" />
<text  x="318.00" y="511.5" >psi.KtLambdaExpress..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveDescriptorForType(LexicalScope, KtUserType, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="162.5" y="837" width="152.5" height="15.0" fill="rgb(206,111,30)" rx="2" ry="2" />
<text  x="165.50" y="847.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1221" width="305.0" height="15.0" fill="rgb(205,112,23)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor$LazyClassTypeConstructor.computeSupertypes() (1 samples, 8.33%)</title><rect x="162.5" y="1045" width="152.5" height="15.0" fill="rgb(215,226,4)" rx="2" ry="2" />
<text  x="165.50" y="1055.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>resolver.UtilsKt.classListValue(AnnotationDescriptor, ResolverContext, String) (5 samples, 41.67%)</title><rect x="925.0" y="2213" width="762.5" height="15.0" fill="rgb(226,143,1)" rx="2" ry="2" />
<text  x="928.00" y="2223.5" >resolver.UtilsKt.classListValue(AnnotationDescriptor, ResolverContext, String)</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeElement(TypeResolutionContext, Annotations, KtModifierList, KtTypeElement) (1 samples, 8.33%)</title><rect x="772.5" y="1621" width="152.5" height="15.0" fill="rgb(207,68,54)" rx="2" ry="2" />
<text  x="775.50" y="1631.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>kotlin.VirtualFileFinder.findKotlinClassOrContent(ClassId) (1 samples, 8.33%)</title><rect x="925.0" y="405" width="152.5" height="15.0" fill="rgb(243,177,13)" rx="2" ry="2" />
<text  x="928.00" y="415.5" >kotlin.VirtualFileF..</text>
</g>
<g >
<title>kotlin.VirtualFileKotlinClass$Factory$create$1.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="277" width="152.5" height="15.0" fill="rgb(235,142,41)" rx="2" ry="2" />
<text  x="928.00" y="287.5" >kotlin.VirtualFileK..</text>
</g>
<g >
<title>psi.KtCallExpression.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="315.0" y="997" width="152.5" height="15.0" fill="rgb(235,154,20)" rx="2" ry="2" />
<text  x="318.00" y="1007.5" >psi.KtCallExpressio..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSize(int, MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="325" width="152.5" height="15.0" fill="rgb(211,147,39)" rx="2" ry="2" />
<text  x="1080.50" y="335.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>kotlin.KotlinBinaryClassCache$Companion.getKotlinBinaryClassOrClassFileContent$default(KotlinBinaryClassCache$Companion, VirtualFile, byte[], int, Object) (1 samples, 8.33%)</title><rect x="925.0" y="389" width="152.5" height="15.0" fill="rgb(239,175,5)" rx="2" ry="2" />
<text  x="928.00" y="399.5" >kotlin.KotlinBinary..</text>
</g>
<g >
<title>kotlinpoet.TypeSpec.emit$kotlinpoet(CodeWriter, String, boolean) (2 samples, 16.67%)</title><rect x="467.5" y="2165" width="305.0" height="15.0" fill="rgb(230,131,30)" rx="2" ry="2" />
<text  x="470.50" y="2175.5" >kotlinpoet.TypeSpec.emit$kotlinpoet(CodeW..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression) (3 samples, 25.00%)</title><rect x="10.0" y="2037" width="457.5" height="15.0" fill="rgb(220,83,19)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >psi.KtVisitorVoid.visitExpression(KtExpression)</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope$classDescriptors$1.invoke(Name) (1 samples, 8.33%)</title><rect x="772.5" y="1317" width="152.5" height="15.0" fill="rgb(243,122,43)" rx="2" ry="2" />
<text  x="775.50" y="1327.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDotQualifiedExpression(KtDotQualifiedExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1285" width="152.5" height="15.0" fill="rgb(253,103,34)" rx="2" ry="2" />
<text  x="318.00" y="1295.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.LazyAnnotationDescriptor.getAllValueArguments() (5 samples, 41.67%)</title><rect x="925.0" y="2181" width="762.5" height="15.0" fill="rgb(244,170,24)" rx="2" ry="2" />
<text  x="928.00" y="2191.5" >descriptors.LazyAnnotationDescriptor.getAllValueArguments()</text>
</g>
<g >
<title>tree.LazyParseableElement.lambda$ensureParsed$0(CharSequence) (1 samples, 8.33%)</title><rect x="315.0" y="181" width="152.5" height="15.0" fill="rgb(252,82,21)" rx="2" ry="2" />
<text  x="318.00" y="191.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (1 samples, 8.33%)</title><rect x="315.0" y="1397" width="152.5" height="15.0" fill="rgb(210,179,18)" rx="2" ry="2" />
<text  x="318.00" y="1407.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>compilerRunner.GradleKotlinCompilerWork$compileInProcess$future$1.call() (12 samples, 100.00%)</title><rect x="10.0" y="2837" width="1830.0" height="15.0" fill="rgb(210,118,7)" rx="2" ry="2" />
<text  x="13.00" y="2847.5" >compilerRunner.GradleKotlinCompilerWork$compileInProcess$future$1.call()</text>
</g>
<g >
<title>lazy.LazyImportScope.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="757" width="152.5" height="15.0" fill="rgb(235,63,20)" rx="2" ry="2" />
<text  x="1385.50" y="767.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, ExpressionTypingContext, KtVisitor) (4 samples, 33.33%)</title><rect x="925.0" y="1125" width="610.0" height="15.0" fill="rgb(241,86,11)" rx="2" ry="2" />
<text  x="928.00" y="1135.5" >expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, Exp..</text>
</g>
<g >
<title>calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionContext, KtReferenceExpression, Collection) (5 samples, 41.67%)</title><rect x="925.0" y="2005" width="762.5" height="15.0" fill="rgb(211,190,46)" rx="2" ry="2" />
<text  x="928.00" y="2015.5" >calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionContext, KtReferenceExpre..</text>
</g>
<g >
<title>calls.ArgumentTypeResolver.getArgumentTypeInfo(KtExpression, CallResolutionContext, ResolveArgumentsMode, boolean) (4 samples, 33.33%)</title><rect x="925.0" y="1461" width="610.0" height="15.0" fill="rgb(228,41,25)" rx="2" ry="2" />
<text  x="928.00" y="1471.5" >calls.ArgumentTypeResolver.getArgumentTypeInfo(KtExpression, CallResolutionContext, ..</text>
</g>
<g >
<title>common.CLICompiler.execImpl(MessageCollector, Services, CommonCompilerArguments) (12 samples, 100.00%)</title><rect x="10.0" y="2709" width="1830.0" height="15.0" fill="rgb(234,86,46)" rx="2" ry="2" />
<text  x="13.00" y="2719.5" >common.CLICompiler.execImpl(MessageCollector, Services, CommonCompilerArguments)</text>
</g>
<g >
<title>calls.CallResolver.resolveCallForConstructor(BasicCallResolutionContext, KtConstructorCalleeExpression) (5 samples, 41.67%)</title><rect x="925.0" y="2037" width="762.5" height="15.0" fill="rgb(206,129,34)" rx="2" ry="2" />
<text  x="928.00" y="2047.5" >calls.CallResolver.resolveCallForConstructor(BasicCallResolutionContext, KtConstructorCalleeExpression)</text>
</g>
<g >
<title>impl.PsiBuilderImpl.buildTree() (1 samples, 8.33%)</title><rect x="315.0" y="117" width="152.5" height="15.0" fill="rgb(236,151,41)" rx="2" ry="2" />
<text  x="318.00" y="127.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver$resolveDoubleColonLHS$resultForExpr$2.invoke(Object, Object) (4 samples, 33.33%)</title><rect x="925.0" y="1253" width="610.0" height="15.0" fill="rgb(241,55,20)" rx="2" ry="2" />
<text  x="928.00" y="1263.5" >expressions.DoubleColonExpressionResolver$resolveDoubleColonLHS$resultForExpr$2.invo..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.writeMessage(int, MessageLite) (1 samples, 8.33%)</title><rect x="1230.0" y="421" width="152.5" height="15.0" fill="rgb(249,6,2)" rx="2" ry="2" />
<text  x="1233.00" y="431.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitQualifiedExpression(KtQualifiedExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1221" width="152.5" height="15.0" fill="rgb(218,138,0)" rx="2" ry="2" />
<text  x="318.00" y="1231.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtFile.accept(PsiElementVisitor) (12 samples, 100.00%)</title><rect x="10.0" y="2533" width="1830.0" height="15.0" fill="rgb(214,51,48)" rx="2" ry="2" />
<text  x="13.00" y="2543.5" >psi.KtFile.accept(PsiElementVisitor)</text>
</g>
<g >
<title>calls.CallResolver.resolveFunctionCall(BindingTrace, LexicalScope, Call, KotlinType, DataFlowInfo, boolean) (5 samples, 41.67%)</title><rect x="925.0" y="2069" width="762.5" height="15.0" fill="rgb(226,96,49)" rx="2" ry="2" />
<text  x="928.00" y="2079.5" >calls.CallResolver.resolveFunctionCall(BindingTrace, LexicalScope, Call, KotlinType, DataFlowInfo, boolean)</text>
</g>
<g >
<title>psi.KtCollectionLiteralExpression.accept(KtVisitor, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1653" width="762.5" height="15.0" fill="rgb(229,156,24)" rx="2" ry="2" />
<text  x="928.00" y="1663.5" >psi.KtCollectionLiteralExpression.accept(KtVisitor, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression) (1 samples, 8.33%)</title><rect x="315.0" y="373" width="152.5" height="15.0" fill="rgb(209,222,33)" rx="2" ry="2" />
<text  x="318.00" y="383.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>calls.CandidateResolver.checkValueArguments(CallCandidateResolutionContext) (5 samples, 41.67%)</title><rect x="925.0" y="1877" width="762.5" height="15.0" fill="rgb(212,6,37)" rx="2" ry="2" />
<text  x="928.00" y="1887.5" >calls.CandidateResolver.checkValueArguments(CallCandidateResolutionContext)</text>
</g>
<g >
<title>metadata.ProtoBuf$Function.getSerializedSize() (1 samples, 8.33%)</title><rect x="1077.5" y="437" width="152.5" height="15.0" fill="rgb(206,219,3)" rx="2" ry="2" />
<text  x="1080.50" y="447.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (3 samples, 25.00%)</title><rect x="10.0" y="1717" width="457.5" height="15.0" fill="rgb(239,35,37)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" >psi.KtElementImplStub.accept(PsiElementVisitor)</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1445" width="152.5" height="15.0" fill="rgb(217,144,1)" rx="2" ry="2" />
<text  x="318.00" y="1455.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>metadata.ProtoBuf$Function.&lt;init&gt;(CodedInputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1189" width="152.5" height="15.0" fill="rgb(206,110,17)" rx="2" ry="2" />
<text  x="1538.00" y="1199.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1429" width="610.0" height="15.0" fill="rgb(224,177,22)" rx="2" ry="2" />
<text  x="928.00" y="1439.5" >expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(KtExpression, ExpressionTy..</text>
</g>
<g >
<title>psi.KtUserType.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="162.5" y="901" width="152.5" height="15.0" fill="rgb(209,115,45)" rx="2" ry="2" />
<text  x="165.50" y="911.5" >psi.KtUserType.acce..</text>
</g>
<g >
<title>impl.PsiBuilderImpl.insertLeaves(int, int, CompositeElement) (1 samples, 8.33%)</title><rect x="315.0" y="85" width="152.5" height="15.0" fill="rgb(254,136,42)" rx="2" ry="2" />
<text  x="318.00" y="95.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope.computeFunctions(Name) (1 samples, 8.33%)</title><rect x="1535.0" y="1429" width="152.5" height="15.0" fill="rgb(233,177,19)" rx="2" ry="2" />
<text  x="1538.00" y="1439.5" >descriptors.Deseria..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (1 samples, 8.33%)</title><rect x="10.0" y="837" width="152.5" height="15.0" fill="rgb(206,131,7)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Object) (1 samples, 8.33%)</title><rect x="772.5" y="1573" width="152.5" height="15.0" fill="rgb(220,25,11)" rx="2" ry="2" />
<text  x="775.50" y="1583.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="789" width="152.5" height="15.0" fill="rgb(223,59,9)" rx="2" ry="2" />
<text  x="318.00" y="799.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1477" width="152.5" height="15.0" fill="rgb(239,41,30)" rx="2" ry="2" />
<text  x="318.00" y="1487.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitSimpleNameExpression(KtSimpleNameExpression, Object) (4 samples, 33.33%)</title><rect x="925.0" y="1093" width="610.0" height="15.0" fill="rgb(238,224,8)" rx="2" ry="2" />
<text  x="928.00" y="1103.5" >expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitSimpleNameExpress..</text>
</g>
<g >
<title>metadata.ProtoBuf$Function.writeTo(CodedOutputStream) (1 samples, 8.33%)</title><rect x="1230.0" y="437" width="152.5" height="15.0" fill="rgb(231,131,5)" rx="2" ry="2" />
<text  x="1233.00" y="447.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(Object) (1 samples, 8.33%)</title><rect x="1535.0" y="1509" width="152.5" height="15.0" fill="rgb(250,65,7)" rx="2" ry="2" />
<text  x="1538.00" y="1519.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.access$doGetClasses(AbstractLazyMemberScope, Name) (1 samples, 8.33%)</title><rect x="772.5" y="1301" width="152.5" height="15.0" fill="rgb(222,43,13)" rx="2" ry="2" />
<text  x="775.50" y="1311.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitQualifiedExpression(KtQualifiedExpression) (1 samples, 8.33%)</title><rect x="315.0" y="1205" width="152.5" height="15.0" fill="rgb(225,110,37)" rx="2" ry="2" />
<text  x="318.00" y="1215.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>test.DiCompilerAnalysisExtension.doAnalysis(Project, ModuleDescriptor, ProjectContext, Collection, BindingTrace, ComponentProvider) (12 samples, 100.00%)</title><rect x="10.0" y="2549" width="1830.0" height="15.0" fill="rgb(225,133,26)" rx="2" ry="2" />
<text  x="13.00" y="2559.5" >test.DiCompilerAnalysisExtension.doAnalysis(Project, ModuleDescriptor, ProjectContext, Collection, BindingTrace, ComponentProvider)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2005" width="457.5" height="15.0" fill="rgb(235,194,38)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" >psi.KtVisitorVoid.visitKtElement(KtElement, Object)</text>
</g>
<g >
<title>psi.KtCollectionLiteralExpression.accept(KtVisitor, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1733" width="762.5" height="15.0" fill="rgb(248,215,17)" rx="2" ry="2" />
<text  x="928.00" y="1743.5" >psi.KtCollectionLiteralExpression.accept(KtVisitor, Object)</text>
</g>
<g >
<title>kotlin.SynchronizedLazyImpl.getValue() (1 samples, 8.33%)</title><rect x="162.5" y="581" width="152.5" height="15.0" fill="rgb(229,204,0)" rx="2" ry="2" />
<text  x="165.50" y="591.5" >kotlin.Synchronized..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (1 samples, 8.33%)</title><rect x="315.0" y="725" width="152.5" height="15.0" fill="rgb(240,179,38)" rx="2" ry="2" />
<text  x="318.00" y="735.5" >psi.KtTreeVisitorVo..</text>
</g>
<g >
<title>resolve.FindLoopsInSupertypes.isReachable(TypeConstructor, TypeConstructor, DFS$Neighbors) (1 samples, 8.33%)</title><rect x="10.0" y="997" width="152.5" height="15.0" fill="rgb(251,51,35)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >resolve.FindLoopsIn..</text>
</g>
<g >
<title>resolve.CollectionLiteralResolver.resolveCollectionLiteralSpecialMethod(KtCollectionLiteralExpression, ExpressionTypingContext) (5 samples, 41.67%)</title><rect x="925.0" y="1589" width="762.5" height="15.0" fill="rgb(219,69,39)" rx="2" ry="2" />
<text  x="928.00" y="1599.5" >resolve.CollectionLiteralResolver.resolveCollectionLiteralSpecialMethod(KtCollectionLiteralExpression, Ex..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (1 samples, 8.33%)</title><rect x="315.0" y="533" width="152.5" height="15.0" fill="rgb(211,174,27)" rx="2" ry="2" />
<text  x="318.00" y="543.5" >psi.KtTreeVisitorVo..</text>
</g>
<g >
<title>lazy.LazyImportResolver.getAllNames() (3 samples, 25.00%)</title><rect x="925.0" y="773" width="457.5" height="15.0" fill="rgb(205,62,11)" rx="2" ry="2" />
<text  x="928.00" y="783.5" >lazy.LazyImportResolver.getAllNames()</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (1 samples, 8.33%)</title><rect x="315.0" y="325" width="152.5" height="15.0" fill="rgb(241,142,39)" rx="2" ry="2" />
<text  x="318.00" y="335.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1093" width="305.0" height="15.0" fill="rgb(242,225,15)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="1365" width="152.5" height="15.0" fill="rgb(216,152,22)" rx="2" ry="2" />
<text  x="775.50" y="1375.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitClassLiteralExpression(KtClassLiteralExpression, Object) (4 samples, 33.33%)</title><rect x="925.0" y="1349" width="610.0" height="15.0" fill="rgb(213,103,49)" rx="2" ry="2" />
<text  x="928.00" y="1359.5" >expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitClassLiteralExpre..</text>
</g>
<g >
<title>resolve.FunctionDescriptorResolver.initializeFunctionDescriptorAndExplicitReturnType(DeclarationDescriptor, LexicalScope, KtFunction, SimpleFunctionDescriptorImpl, BindingTrace, KotlinType, DataFlowInfo) (1 samples, 8.33%)</title><rect x="772.5" y="1893" width="152.5" height="15.0" fill="rgb(225,110,10)" rx="2" ry="2" />
<text  x="775.50" y="1903.5" >resolve.FunctionDes..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.access$doGetFunctions(AbstractLazyMemberScope, Name) (1 samples, 8.33%)</title><rect x="772.5" y="1957" width="152.5" height="15.0" fill="rgb(248,176,37)" rx="2" ry="2" />
<text  x="775.50" y="1967.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitReferenceExpression(KtReferenceExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="901" width="152.5" height="15.0" fill="rgb(224,50,23)" rx="2" ry="2" />
<text  x="318.00" y="911.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1285" width="305.0" height="15.0" fill="rgb(248,20,43)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>descriptors.LazyAnnotations.hasAnnotation(FqName) (2 samples, 16.67%)</title><rect x="10.0" y="1589" width="305.0" height="15.0" fill="rgb(236,12,45)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >descriptors.LazyAnnotations.hasAnnotation..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSizeNoTag(MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="261" width="152.5" height="15.0" fill="rgb(237,180,23)" rx="2" ry="2" />
<text  x="1080.50" y="271.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>tower.TowerResolver$Task.mayFitForName(ResolutionScope, Name) (3 samples, 25.00%)</title><rect x="925.0" y="821" width="457.5" height="15.0" fill="rgb(244,178,0)" rx="2" ry="2" />
<text  x="928.00" y="831.5" >tower.TowerResolver$Task.mayFitForName(ResolutionScope, Name)</text>
</g>
<g >
<title>protobuf.AbstractParser.parseDelimitedFrom(InputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1301" width="152.5" height="15.0" fill="rgb(213,100,14)" rx="2" ry="2" />
<text  x="1538.00" y="1311.5" >protobuf.AbstractPa..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (3 samples, 25.00%)</title><rect x="10.0" y="1909" width="457.5" height="15.0" fill="rgb(229,204,0)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" >psi.KtElementImplStub.accept(PsiElementVisitor)</text>
</g>
<g >
<title>scopes.ImportingScope$DefaultImpls.getContributedClassifierIncludeDeprecated(ImportingScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="757" width="152.5" height="15.0" fill="rgb(254,84,36)" rx="2" ry="2" />
<text  x="165.50" y="767.5" >scopes.ImportingSco..</text>
</g>
<g >
<title>tower.TowerResolver.runResolve(ImplicitScopeTower, ScopeTowerProcessor, boolean, Name) (4 samples, 33.33%)</title><rect x="925.0" y="869" width="610.0" height="15.0" fill="rgb(223,203,26)" rx="2" ry="2" />
<text  x="928.00" y="879.5" >tower.TowerResolver.runResolve(ImplicitScopeTower, ScopeTowerProcessor, boolean, Name)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDotQualifiedExpression(KtDotQualifiedExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1301" width="152.5" height="15.0" fill="rgb(217,127,13)" rx="2" ry="2" />
<text  x="318.00" y="1311.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveType(LexicalScope, KtTypeReference, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="162.5" y="981" width="152.5" height="15.0" fill="rgb(252,0,19)" rx="2" ry="2" />
<text  x="165.50" y="991.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="1349" width="152.5" height="15.0" fill="rgb(249,130,8)" rx="2" ry="2" />
<text  x="318.00" y="1359.5" >impl.PsiElementBase..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor.getScopeForStaticMemberDeclarationResolution() (2 samples, 16.67%)</title><rect x="10.0" y="1381" width="305.0" height="15.0" fill="rgb(220,208,12)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >descriptors.LazyClassDescriptor.getScopeF..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="565" width="457.5" height="15.0" fill="rgb(239,15,54)" rx="2" ry="2" />
<text  x="928.00" y="575.5" >storage.LockBasedStorageManager$LockBasedLazyValue.invoke()</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope$classDescriptors$1.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="1333" width="152.5" height="15.0" fill="rgb(221,187,15)" rx="2" ry="2" />
<text  x="775.50" y="1343.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>psi.KtNameReferenceExpression.accept(KtVisitor, Object) (4 samples, 33.33%)</title><rect x="925.0" y="1109" width="610.0" height="15.0" fill="rgb(220,40,47)" rx="2" ry="2" />
<text  x="928.00" y="1119.5" >psi.KtNameReferenceExpression.accept(KtVisitor, Object)</text>
</g>
<g >
<title>tree.LazyParseableElement.getFirstChildNode() (1 samples, 8.33%)</title><rect x="1687.5" y="2357" width="152.5" height="15.0" fill="rgb(245,57,5)" rx="2" ry="2" />
<text  x="1690.50" y="2367.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(KtClass) (2 samples, 16.67%)</title><rect x="10.0" y="1621" width="305.0" height="15.0" fill="rgb(207,146,52)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >test.DiCompilerAnalysisExtension$doAnalys..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (3 samples, 25.00%)</title><rect x="10.0" y="1973" width="457.5" height="15.0" fill="rgb(250,165,47)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" >psi.KtVisitorVoid.visitKtElement(KtElement)</text>
</g>
<g >
<title>storage.StorageKt.getValue(NotNullLazyValue, Object, KProperty) (5 samples, 41.67%)</title><rect x="925.0" y="2165" width="762.5" height="15.0" fill="rgb(206,72,4)" rx="2" ry="2" />
<text  x="928.00" y="2175.5" >storage.StorageKt.getValue(NotNullLazyValue, Object, KProperty)</text>
</g>
<g >
<title>utils.ScopeUtilsKt.findFirstClassifierWithDeprecationStatus(HierarchicalScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="789" width="152.5" height="15.0" fill="rgb(243,123,33)" rx="2" ry="2" />
<text  x="165.50" y="799.5" >utils.ScopeUtilsKt...</text>
</g>
<g >
<title>descriptors.JvmPackageScope.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="677" width="152.5" height="15.0" fill="rgb(250,227,28)" rx="2" ry="2" />
<text  x="1385.50" y="687.5" >descriptors.JvmPack..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassBody(KtClassBody, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1877" width="457.5" height="15.0" fill="rgb(243,66,54)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" >psi.KtVisitorVoid.visitClassBody(KtClassBody, Object)</text>
</g>
<g >
<title>impl.PsiElementBase.acceptChildren(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="1029" width="152.5" height="15.0" fill="rgb(234,66,36)" rx="2" ry="2" />
<text  x="318.00" y="1039.5" >impl.PsiElementBase..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtFile(KtFile, Object) (12 samples, 100.00%)</title><rect x="10.0" y="2501" width="1830.0" height="15.0" fill="rgb(228,100,11)" rx="2" ry="2" />
<text  x="13.00" y="2511.5" >psi.KtVisitorVoid.visitKtFile(KtFile, Object)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (5 samples, 41.67%)</title><rect x="925.0" y="2133" width="762.5" height="15.0" fill="rgb(218,33,54)" rx="2" ry="2" />
<text  x="928.00" y="2143.5" >storage.LockBasedStorageManager$LockBasedLazyValue.invoke()</text>
</g>
<g >
<title>resolve.QualifiedExpressionResolver.findClassifierAndReportDeprecationIfNeeded(LexicalScope, Name, KotlinLookupLocation, KtExpression, BindingTrace) (1 samples, 8.33%)</title><rect x="162.5" y="805" width="152.5" height="15.0" fill="rgb(249,68,0)" rx="2" ry="2" />
<text  x="165.50" y="815.5" >resolve.QualifiedEx..</text>
</g>
<g >
<title>scopes.MemberScopeImpl.getContributedClassifierIncludeDeprecated(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1445" width="152.5" height="15.0" fill="rgb(237,131,15)" rx="2" ry="2" />
<text  x="775.50" y="1455.5" >scopes.MemberScopeI..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (1 samples, 8.33%)</title><rect x="315.0" y="1077" width="152.5" height="15.0" fill="rgb(229,125,42)" rx="2" ry="2" />
<text  x="318.00" y="1087.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (4 samples, 33.33%)</title><rect x="925.0" y="1541" width="610.0" height="15.0" fill="rgb(236,5,18)" rx="2" ry="2" />
<text  x="928.00" y="1551.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedFunction(KtNamedFunction, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1685" width="152.5" height="15.0" fill="rgb(222,2,44)" rx="2" ry="2" />
<text  x="318.00" y="1695.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1701" width="762.5" height="15.0" fill="rgb(253,144,30)" rx="2" ry="2" />
<text  x="928.00" y="1711.5" >psi.KtVisitor.visitExpression(KtExpression, Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="837" width="152.5" height="15.0" fill="rgb(210,62,52)" rx="2" ry="2" />
<text  x="318.00" y="847.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.FunctionDescriptorResolver.resolveValueParameters(FunctionDescriptor, LexicalWritableScope, List, BindingTrace, List) (1 samples, 8.33%)</title><rect x="772.5" y="1861" width="152.5" height="15.0" fill="rgb(253,44,1)" rx="2" ry="2" />
<text  x="775.50" y="1871.5" >resolve.FunctionDes..</text>
</g>
<g >
<title>descriptors.LazyClassMemberScope.getContributedDescriptors(DescriptorKindFilter, Function1) (1 samples, 8.33%)</title><rect x="772.5" y="2149" width="152.5" height="15.0" fill="rgb(234,46,35)" rx="2" ry="2" />
<text  x="775.50" y="2159.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1957" width="457.5" height="15.0" fill="rgb(235,112,33)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" >psi.KtVisitor.visitKtElement(KtElement, Object)</text>
</g>
<g >
<title>collect.ImmutableListMultimap.fromMapEntries(Collection, Comparator) (1 samples, 8.33%)</title><rect x="162.5" y="501" width="152.5" height="15.0" fill="rgb(243,19,45)" rx="2" ry="2" />
<text  x="165.50" y="511.5" >collect.ImmutableLi..</text>
</g>
<g >
<title>tower.TowerResolver$Task.recordLookups() (1 samples, 8.33%)</title><rect x="1382.5" y="821" width="152.5" height="15.0" fill="rgb(254,8,18)" rx="2" ry="2" />
<text  x="1385.50" y="831.5" >tower.TowerResolver..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.getContributedClassifier(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1381" width="152.5" height="15.0" fill="rgb(249,66,50)" rx="2" ry="2" />
<text  x="775.50" y="1391.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver.resolveExpressionOnLHS(KtExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1205" width="610.0" height="15.0" fill="rgb(220,113,6)" rx="2" ry="2" />
<text  x="928.00" y="1215.5" >expressions.DoubleColonExpressionResolver.resolveExpressionOnLHS(KtExpression, Expre..</text>
</g>
<g >
<title>compilerRunner.GradleKotlinCompilerWork.compileInProcessImpl(MessageCollector) (12 samples, 100.00%)</title><rect x="10.0" y="2789" width="1830.0" height="15.0" fill="rgb(209,31,35)" rx="2" ry="2" />
<text  x="13.00" y="2799.5" >compilerRunner.GradleKotlinCompilerWork.compileInProcessImpl(MessageCollector)</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSizeNoTag(MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="405" width="152.5" height="15.0" fill="rgb(212,32,0)" rx="2" ry="2" />
<text  x="1080.50" y="415.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtUserType.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="772.5" y="1589" width="152.5" height="15.0" fill="rgb(218,140,44)" rx="2" ry="2" />
<text  x="775.50" y="1599.5" >psi.KtUserType.acce..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitCallExpression(KtCallExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="981" width="152.5" height="15.0" fill="rgb(219,153,40)" rx="2" ry="2" />
<text  x="318.00" y="991.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="162.5" y="917" width="152.5" height="15.0" fill="rgb(237,181,21)" rx="2" ry="2" />
<text  x="165.50" y="927.5" >psi.KtElementImplSt..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.visitKtElement(KtElement, ExpressionTypingContext) (5 samples, 41.67%)</title><rect x="925.0" y="1669" width="762.5" height="15.0" fill="rgb(225,229,48)" rx="2" ry="2" />
<text  x="928.00" y="1679.5" >expressions.ExpressionTypingVisitorDispatcher.visitKtElement(KtElement, ExpressionTypingContext)</text>
</g>
<g >
<title>resolve.CollectionLiteralResolver.getFunctionDescriptorForCollectionLiteral(KtCollectionLiteralExpression, Name) (1 samples, 8.33%)</title><rect x="1535.0" y="1573" width="152.5" height="15.0" fill="rgb(219,154,29)" rx="2" ry="2" />
<text  x="1538.00" y="1583.5" >resolve.CollectionL..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1237" width="305.0" height="15.0" fill="rgb(215,159,26)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (1 samples, 8.33%)</title><rect x="315.0" y="565" width="152.5" height="15.0" fill="rgb(216,161,46)" rx="2" ry="2" />
<text  x="318.00" y="575.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>kotlinpoet.TypeSpec.constructorProperties() (2 samples, 16.67%)</title><rect x="467.5" y="2133" width="305.0" height="15.0" fill="rgb(247,162,47)" rx="2" ry="2" />
<text  x="470.50" y="2143.5" >kotlinpoet.TypeSpec.constructorProperties()</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Object) (1 samples, 8.33%)</title><rect x="162.5" y="885" width="152.5" height="15.0" fill="rgb(245,13,15)" rx="2" ry="2" />
<text  x="165.50" y="895.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$inheritanceScopeWithMe$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1253" width="305.0" height="15.0" fill="rgb(223,11,45)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>resolve.TypeResolver$resolveTypeElement$1.visitUserType(KtUserType) (1 samples, 8.33%)</title><rect x="162.5" y="853" width="152.5" height="15.0" fill="rgb(223,89,15)" rx="2" ry="2" />
<text  x="165.50" y="863.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>scopes.ChainedMemberScope.getClassifierNames() (3 samples, 25.00%)</title><rect x="925.0" y="661" width="457.5" height="15.0" fill="rgb(220,12,22)" rx="2" ry="2" />
<text  x="928.00" y="671.5" >scopes.ChainedMemberScope.getClassifierNames()</text>
</g>
<g >
<title>psi.KtVisitor.visitReferenceExpression(KtReferenceExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="869" width="152.5" height="15.0" fill="rgb(244,81,30)" rx="2" ry="2" />
<text  x="318.00" y="879.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke() (1 samples, 8.33%)</title><rect x="772.5" y="2085" width="152.5" height="15.0" fill="rgb(214,132,12)" rx="2" ry="2" />
<text  x="775.50" y="2095.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="772.5" y="1781" width="152.5" height="15.0" fill="rgb(226,139,1)" rx="2" ry="2" />
<text  x="775.50" y="1791.5" >psi.KtElementImplSt..</text>
</g>
<g >
<title>parsing.KotlinParser.parse(IElementType, PsiBuilder, PsiFile) (1 samples, 8.33%)</title><rect x="1687.5" y="2261" width="152.5" height="15.0" fill="rgb(232,172,51)" rx="2" ry="2" />
<text  x="1690.50" y="2271.5" >parsing.KotlinParse..</text>
</g>
<g >
<title>impl.PsiBuilderImpl.getTreeBuilt() (1 samples, 8.33%)</title><rect x="315.0" y="133" width="152.5" height="15.0" fill="rgb(234,158,8)" rx="2" ry="2" />
<text  x="318.00" y="143.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke() (12 samples, 100.00%)</title><rect x="10.0" y="2613" width="1830.0" height="15.0" fill="rgb(252,118,45)" rx="2" ry="2" />
<text  x="13.00" y="2623.5" >compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke()</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (1 samples, 8.33%)</title><rect x="10.0" y="853" width="152.5" height="15.0" fill="rgb(233,204,1)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>calls.CallResolver.computeTasksAndResolveCall(BasicCallResolutionContext, Name, KtReferenceExpression, NewResolutionOldInference$ResolutionKind) (4 samples, 33.33%)</title><rect x="925.0" y="981" width="610.0" height="15.0" fill="rgb(212,152,48)" rx="2" ry="2" />
<text  x="928.00" y="991.5" >calls.CallResolver.computeTasksAndResolveCall(BasicCallResolutionContext, Name, KtRe..</text>
</g>
<g >
<title>compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(Project, Collection, BindingTrace, CompilerConfiguration, Function1, Function2, GlobalSearchScope) (12 samples, 100.00%)</title><rect x="10.0" y="2565" width="1830.0" height="15.0" fill="rgb(212,177,15)" rx="2" ry="2" />
<text  x="13.00" y="2575.5" >compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(Project, Collection, BindingTrace, CompilerConfiguration, Function1, Function2, GlobalSearchScope)</text>
</g>
<g >
<title>descriptors.LazyAnnotations$annotation$1.invoke(Object) (2 samples, 16.67%)</title><rect x="10.0" y="1477" width="305.0" height="15.0" fill="rgb(219,216,7)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >descriptors.LazyAnnotations$annotation$1...</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="772.5" y="1605" width="152.5" height="15.0" fill="rgb(252,129,43)" rx="2" ry="2" />
<text  x="775.50" y="1615.5" >psi.KtElementImplSt..</text>
</g>
<g >
<title>calls.CallResolver.resolveConstructorCall(BasicCallResolutionContext, KtReferenceExpression, KotlinType) (5 samples, 41.67%)</title><rect x="925.0" y="2021" width="762.5" height="15.0" fill="rgb(206,113,46)" rx="2" ry="2" />
<text  x="928.00" y="2031.5" >calls.CallResolver.resolveConstructorCall(BasicCallResolutionContext, KtReferenceExpression, KotlinType)</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$scopeForStaticMemberDeclarationResolution$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1317" width="305.0" height="15.0" fill="rgb(206,213,47)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (1 samples, 8.33%)</title><rect x="772.5" y="2133" width="152.5" height="15.0" fill="rgb(212,12,44)" rx="2" ry="2" />
<text  x="775.50" y="2143.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression) (1 samples, 8.33%)</title><rect x="315.0" y="1461" width="152.5" height="15.0" fill="rgb(245,129,52)" rx="2" ry="2" />
<text  x="318.00" y="1471.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor$LazyClassTypeConstructor.computeSupertypes() (1 samples, 8.33%)</title><rect x="10.0" y="789" width="152.5" height="15.0" fill="rgb(249,96,40)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >descriptors.LazyCla..</text>
</g>
<g >
<title>resolve.SupertypeLoopCheckerImpl$findLoopsInSupertypesAndDisconnect$graph$1.getNeighbors(Object) (1 samples, 8.33%)</title><rect x="10.0" y="949" width="152.5" height="15.0" fill="rgb(247,166,0)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >resolve.SupertypeLo..</text>
</g>
<g >
<title>psi.KtVisitor.visitDotQualifiedExpression(KtDotQualifiedExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1253" width="152.5" height="15.0" fill="rgb(251,164,48)" rx="2" ry="2" />
<text  x="318.00" y="1263.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>types.AbstractTypeConstructor.access$computeNeighbours(AbstractTypeConstructor, TypeConstructor, boolean) (1 samples, 8.33%)</title><rect x="10.0" y="885" width="152.5" height="15.0" fill="rgb(239,115,25)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>protobuf.AbstractParser.parsePartialFrom(InputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1253" width="152.5" height="15.0" fill="rgb(254,149,50)" rx="2" ry="2" />
<text  x="1538.00" y="1263.5" >protobuf.AbstractPa..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (1 samples, 8.33%)</title><rect x="315.0" y="1365" width="152.5" height="15.0" fill="rgb(240,164,50)" rx="2" ry="2" />
<text  x="318.00" y="1375.5" >psi.KtTreeVisitorVo..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveDescriptorForType(LexicalScope, KtUserType, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="772.5" y="1525" width="152.5" height="15.0" fill="rgb(212,55,44)" rx="2" ry="2" />
<text  x="775.50" y="1535.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>tower.NoExplicitReceiverScopeTowerProcessor.recordLookups(Collection, Name) (1 samples, 8.33%)</title><rect x="1382.5" y="789" width="152.5" height="15.0" fill="rgb(246,80,36)" rx="2" ry="2" />
<text  x="1385.50" y="799.5" >tower.NoExplicitRec..</text>
</g>
<g >
<title>psi.VisitorWrappersKt$classRecursiveVisitor$1.visitClass(KtClass) (2 samples, 16.67%)</title><rect x="10.0" y="1653" width="305.0" height="15.0" fill="rgb(217,54,38)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" >psi.VisitorWrappersKt$classRecursiveVisit..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClass(KtClass, Object) (2 samples, 16.67%)</title><rect x="10.0" y="1685" width="305.0" height="15.0" fill="rgb(239,141,0)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" >psi.KtVisitorVoid.visitClass(KtClass, Obj..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="162.5" y="965" width="152.5" height="15.0" fill="rgb(236,92,39)" rx="2" ry="2" />
<text  x="165.50" y="975.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (12 samples, 100.00%)</title><rect x="10.0" y="2421" width="1830.0" height="15.0" fill="rgb(218,13,18)" rx="2" ry="2" />
<text  x="13.00" y="2431.5" >psi.KtTreeVisitorVoid.visitElement(PsiElement)</text>
</g>
<g >
<title>lazy.LazyImportScope.getContributedClassifier(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="709" width="152.5" height="15.0" fill="rgb(238,50,52)" rx="2" ry="2" />
<text  x="165.50" y="719.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>resolve.FindLoopsInSupertypes.access$isReachable(TypeConstructor, TypeConstructor, DFS$Neighbors) (1 samples, 8.33%)</title><rect x="10.0" y="1013" width="152.5" height="15.0" fill="rgb(249,187,34)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >resolve.FindLoopsIn..</text>
</g>
<g >
<title>resolve.TypeResolver.resolvePossiblyBareType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="772.5" y="1637" width="152.5" height="15.0" fill="rgb(208,72,8)" rx="2" ry="2" />
<text  x="775.50" y="1647.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (3 samples, 25.00%)</title><rect x="10.0" y="1749" width="457.5" height="15.0" fill="rgb(226,136,46)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >psi.KtTreeVisitorVoid.visitElement(PsiElement)</text>
</g>
<g >
<title>calls.CallExpressionResolver.getVariableType(KtSimpleNameExpression, Receiver, ASTNode, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1013" width="610.0" height="15.0" fill="rgb(205,62,6)" rx="2" ry="2" />
<text  x="928.00" y="1023.5" >calls.CallExpressionResolver.getVariableType(KtSimpleNameExpression, Receiver, ASTNo..</text>
</g>
<g >
<title>common.CLITool.exec(MessageCollector, Services, CommonToolArguments) (12 samples, 100.00%)</title><rect x="10.0" y="2741" width="1830.0" height="15.0" fill="rgb(244,173,33)" rx="2" ry="2" />
<text  x="13.00" y="2751.5" >common.CLITool.exec(MessageCollector, Services, CommonToolArguments)</text>
</g>
<g >
<title>resolve.TypeResolver$resolveTypeElement$1.visitUserType(KtUserType) (1 samples, 8.33%)</title><rect x="772.5" y="1717" width="152.5" height="15.0" fill="rgb(246,146,52)" rx="2" ry="2" />
<text  x="775.50" y="1727.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1109" width="152.5" height="15.0" fill="rgb(205,218,42)" rx="2" ry="2" />
<text  x="318.00" y="1119.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClass(KtClass) (3 samples, 25.00%)</title><rect x="10.0" y="2293" width="457.5" height="15.0" fill="rgb(251,50,47)" rx="2" ry="2" />
<text  x="13.00" y="2303.5" >psi.KtVisitorVoid.visitClass(KtClass)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitQualifiedExpression(KtQualifiedExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1237" width="152.5" height="15.0" fill="rgb(248,142,9)" rx="2" ry="2" />
<text  x="318.00" y="1247.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1413" width="152.5" height="15.0" fill="rgb(246,122,53)" rx="2" ry="2" />
<text  x="318.00" y="1423.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (5 samples, 41.67%)</title><rect x="925.0" y="1765" width="762.5" height="15.0" fill="rgb(251,99,23)" rx="2" ry="2" />
<text  x="928.00" y="1775.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>name.FqNameUnsafe.asString() (1 samples, 8.33%)</title><rect x="1382.5" y="629" width="152.5" height="15.0" fill="rgb(246,183,41)" rx="2" ry="2" />
<text  x="1385.50" y="639.5" >name.FqNameUnsafe.a..</text>
</g>
<g >
<title>compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinCoreEnvironment, String) (12 samples, 100.00%)</title><rect x="10.0" y="2645" width="1830.0" height="15.0" fill="rgb(223,178,51)" rx="2" ry="2" />
<text  x="13.00" y="2655.5" >compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinCoreEnvironment, String)</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1765" width="457.5" height="15.0" fill="rgb(232,164,4)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" >psi.KtVisitor.visitKtElement(KtElement, Object)</text>
</g>
<g >
<title>impl.PsiBuilderImpl.createLeaf(IElementType, int, int) (1 samples, 8.33%)</title><rect x="315.0" y="69" width="152.5" height="15.0" fill="rgb(254,152,47)" rx="2" ry="2" />
<text  x="318.00" y="79.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>protobuf.AbstractMessageLite.writeDelimitedTo(OutputStream) (2 samples, 16.67%)</title><rect x="1077.5" y="453" width="305.0" height="15.0" fill="rgb(237,218,25)" rx="2" ry="2" />
<text  x="1080.50" y="463.5" >protobuf.AbstractMessageLite.writeDelimit..</text>
</g>
<g >
<title>resolve.TypeResolver.resolvePossiblyBareType(TypeResolutionContext, KtTypeReference) (1 samples, 8.33%)</title><rect x="162.5" y="949" width="152.5" height="15.0" fill="rgb(229,221,21)" rx="2" ry="2" />
<text  x="165.50" y="959.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>resolver.DaggerComponentDescriptor.parseDefinition() (6 samples, 50.00%)</title><rect x="772.5" y="2245" width="915.0" height="15.0" fill="rgb(229,107,48)" rx="2" ry="2" />
<text  x="775.50" y="2255.5" >resolver.DaggerComponentDescriptor.parseDefinition()</text>
</g>
<g >
<title>descriptors.LazyAnnotations$annotation$1.invoke(KtAnnotationEntry) (2 samples, 16.67%)</title><rect x="10.0" y="1461" width="305.0" height="15.0" fill="rgb(209,172,39)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >descriptors.LazyAnnotations$annotation$1...</text>
</g>
<g >
<title>kotlinpoet.CodeWriter.emitCode$default(CodeWriter, CodeBlock, boolean, int, Object) (1 samples, 8.33%)</title><rect x="620.0" y="2069" width="152.5" height="15.0" fill="rgb(231,208,26)" rx="2" ry="2" />
<text  x="623.00" y="2079.5" >kotlinpoet.CodeWrit..</text>
</g>
<g >
<title>kotlinpoet.CodeBlock.equals(Object) (2 samples, 16.67%)</title><rect x="467.5" y="2101" width="305.0" height="15.0" fill="rgb(208,43,44)" rx="2" ry="2" />
<text  x="470.50" y="2111.5" >kotlinpoet.CodeBlock.equals(Object)</text>
</g>
<g >
<title>source.PsiFileImpl.acceptChildren(PsiElementVisitor) (12 samples, 100.00%)</title><rect x="10.0" y="2405" width="1830.0" height="15.0" fill="rgb(213,178,3)" rx="2" ry="2" />
<text  x="13.00" y="2415.5" >source.PsiFileImpl.acceptChildren(PsiElementVisitor)</text>
</g>
<g >
<title>tower.ScopeBasedTowerLevel.recordLookup(Name) (1 samples, 8.33%)</title><rect x="1382.5" y="773" width="152.5" height="15.0" fill="rgb(206,88,50)" rx="2" ry="2" />
<text  x="1385.50" y="783.5" >tower.ScopeBasedTow..</text>
</g>
<g >
<title>creator.FactoryDescriptorKt.methods(ClassDescriptor) (1 samples, 8.33%)</title><rect x="772.5" y="2181" width="152.5" height="15.0" fill="rgb(215,188,2)" rx="2" ry="2" />
<text  x="775.50" y="2191.5" >creator.FactoryDesc..</text>
</g>
<g >
<title>creator.FactoryDescriptorKt.access$methods(ClassDescriptor) (1 samples, 8.33%)</title><rect x="772.5" y="2197" width="152.5" height="15.0" fill="rgb(252,22,52)" rx="2" ry="2" />
<text  x="775.50" y="2207.5" >creator.FactoryDesc..</text>
</g>
<g >
<title>descriptors.JvmPackageScope.getClassifierNames() (3 samples, 25.00%)</title><rect x="925.0" y="629" width="457.5" height="15.0" fill="rgb(230,160,36)" rx="2" ry="2" />
<text  x="928.00" y="639.5" >descriptors.JvmPackageScope.getClassifierNames()</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1429" width="152.5" height="15.0" fill="rgb(236,60,3)" rx="2" ry="2" />
<text  x="318.00" y="1439.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>protobuf.AbstractParser.parsePartialDelimitedFrom(InputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1269" width="152.5" height="15.0" fill="rgb(216,179,12)" rx="2" ry="2" />
<text  x="1538.00" y="1279.5" >protobuf.AbstractPa..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitCallExpression(KtCallExpression) (1 samples, 8.33%)</title><rect x="315.0" y="949" width="152.5" height="15.0" fill="rgb(241,205,30)" rx="2" ry="2" />
<text  x="318.00" y="959.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.QualifiedExpressionResolver.findClassifierAndReportDeprecationIfNeeded(LexicalScope, Name, KotlinLookupLocation, KtExpression, BindingTrace) (1 samples, 8.33%)</title><rect x="772.5" y="1493" width="152.5" height="15.0" fill="rgb(228,53,39)" rx="2" ry="2" />
<text  x="775.50" y="1503.5" >resolve.QualifiedEx..</text>
</g>
<g >
<title>scopes.ResolutionScope$DefaultImpls.getContributedClassifierIncludeDeprecated(ResolutionScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="725" width="152.5" height="15.0" fill="rgb(229,11,42)" rx="2" ry="2" />
<text  x="165.50" y="735.5" >scopes.ResolutionSc..</text>
</g>
<g >
<title>resolve.DescriptorResolver.resolveSuperTypeListEntries(LexicalScope, List, TypeResolver, BindingTrace, boolean) (1 samples, 8.33%)</title><rect x="162.5" y="997" width="152.5" height="15.0" fill="rgb(213,224,31)" rx="2" ry="2" />
<text  x="165.50" y="1007.5" >resolve.DescriptorR..</text>
</g>
<g >
<title>test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(Object) (8 samples, 66.67%)</title><rect x="467.5" y="2293" width="1220.0" height="15.0" fill="rgb(209,150,23)" rx="2" ry="2" />
<text  x="470.50" y="2303.5" >test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(Object)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject) (3 samples, 25.00%)</title><rect x="10.0" y="2229" width="457.5" height="15.0" fill="rgb(248,169,34)" rx="2" ry="2" />
<text  x="13.00" y="2239.5" >psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject)</text>
</g>
<g >
<title>tree.TreeElement.setTreeParent(CompositeElement) (1 samples, 8.33%)</title><rect x="1687.5" y="2165" width="152.5" height="15.0" fill="rgb(245,216,31)" rx="2" ry="2" />
<text  x="1690.50" y="2175.5" >tree.TreeElement.se..</text>
</g>
<g >
<title>utils.ScopeUtilsKt.findFirstClassifierWithDeprecationStatus(HierarchicalScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1477" width="152.5" height="15.0" fill="rgb(222,174,42)" rx="2" ry="2" />
<text  x="775.50" y="1487.5" >utils.ScopeUtilsKt...</text>
</g>
<g >
<title>impl.PsiBuilderImpl.bind(PsiBuilderImpl$StartMarker, CompositeElement) (1 samples, 8.33%)</title><rect x="1687.5" y="2213" width="152.5" height="15.0" fill="rgb(230,49,32)" rx="2" ry="2" />
<text  x="1690.50" y="2223.5" >impl.PsiBuilderImpl..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClass(KtClass, Void) (11 samples, 91.67%)</title><rect x="10.0" y="2325" width="1677.5" height="15.0" fill="rgb(223,87,4)" rx="2" ry="2" />
<text  x="13.00" y="2335.5" >psi.KtVisitorVoid.visitClass(KtClass, Void)</text>
</g>
<g >
<title>impl.DebugUtil.performPsiModification(String, ThrowableRunnable) (1 samples, 8.33%)</title><rect x="315.0" y="197" width="152.5" height="15.0" fill="rgb(233,41,4)" rx="2" ry="2" />
<text  x="318.00" y="207.5" >impl.DebugUtil.perf..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.visitClassLiteralExpression(KtClassLiteralExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1333" width="610.0" height="15.0" fill="rgb(223,98,21)" rx="2" ry="2" />
<text  x="928.00" y="1343.5" >expressions.ExpressionTypingVisitorDispatcher.visitClassLiteralExpression(KtClassLit..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeForClass(TypeResolutionContext, Annotations, ClassDescriptor, KtElement, QualifiedExpressionResolver$TypeQualifierResolutionResult) (1 samples, 8.33%)</title><rect x="772.5" y="1685" width="152.5" height="15.0" fill="rgb(239,199,36)" rx="2" ry="2" />
<text  x="775.50" y="1695.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>expressions.BasicExpressionTypingVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1637" width="762.5" height="15.0" fill="rgb(209,91,11)" rx="2" ry="2" />
<text  x="928.00" y="1647.5" >expressions.BasicExpressionTypingVisitor.visitCollectionLiteralExpression(KtCollectionLiteralExpression, ..</text>
</g>
<g >
<title>lazy.LazyImportResolver$allNames$2.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="725" width="457.5" height="15.0" fill="rgb(212,201,51)" rx="2" ry="2" />
<text  x="928.00" y="735.5" >lazy.LazyImportResolver$allNames$2.invoke()</text>
</g>
<g >
<title>collect.ImmutableList.construct(Object[]) (1 samples, 8.33%)</title><rect x="162.5" y="469" width="152.5" height="15.0" fill="rgb(207,65,5)" rx="2" ry="2" />
<text  x="165.50" y="479.5" >collect.ImmutableLi..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtFile(KtFile) (12 samples, 100.00%)</title><rect x="10.0" y="2469" width="1830.0" height="15.0" fill="rgb(214,76,37)" rx="2" ry="2" />
<text  x="13.00" y="2479.5" >psi.KtVisitorVoid.visitKtFile(KtFile)</text>
</g>
<g >
<title>resolver.ComponentDescriptorKt.isComponent(ClassDescriptor) (2 samples, 16.67%)</title><rect x="10.0" y="1605" width="305.0" height="15.0" fill="rgb(232,90,51)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >resolver.ComponentDescriptorKt.isComponen..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope$computeDescriptors$$inlined$let$lambda$1.invoke() (1 samples, 8.33%)</title><rect x="1535.0" y="1317" width="152.5" height="15.0" fill="rgb(213,70,2)" rx="2" ry="2" />
<text  x="1538.00" y="1327.5" >descriptors.Deseria..</text>
</g>
<g >
<title>scopes.AbstractScopeAdapter.getClassifierNames() (3 samples, 25.00%)</title><rect x="925.0" y="677" width="457.5" height="15.0" fill="rgb(243,92,53)" rx="2" ry="2" />
<text  x="928.00" y="687.5" >scopes.AbstractScopeAdapter.getClassifierNames()</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver.access$resolveExpressionOnLHS(DoubleColonExpressionResolver, KtExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1221" width="610.0" height="15.0" fill="rgb(236,139,15)" rx="2" ry="2" />
<text  x="928.00" y="1231.5" >expressions.DoubleColonExpressionResolver.access$resolveExpressionOnLHS(DoubleColonE..</text>
</g>
<g >
<title>collections.EmptyMap.entrySet() (1 samples, 8.33%)</title><rect x="467.5" y="2037" width="152.5" height="15.0" fill="rgb(228,120,50)" rx="2" ry="2" />
<text  x="470.50" y="2047.5" >collections.EmptyMa..</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver$resolveDoubleColonLHS$resultForExpr$2.invoke(KtExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1237" width="610.0" height="15.0" fill="rgb(209,140,5)" rx="2" ry="2" />
<text  x="928.00" y="1247.5" >expressions.DoubleColonExpressionResolver$resolveDoubleColonLHS$resultForExpr$2.invo..</text>
</g>
<g >
<title>compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke() (12 samples, 100.00%)</title><rect x="10.0" y="2597" width="1830.0" height="15.0" fill="rgb(220,64,47)" rx="2" ry="2" />
<text  x="13.00" y="2607.5" >compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke()</text>
</g>
<g >
<title>scopes.MemberScopeKt.flatMapClassifierNamesOrNull(Collection) (3 samples, 25.00%)</title><rect x="925.0" y="645" width="457.5" height="15.0" fill="rgb(209,139,6)" rx="2" ry="2" />
<text  x="928.00" y="655.5" >scopes.MemberScopeKt.flatMapClassifierNamesOrNull(Collection)</text>
</g>
<g >
<title>types.AbstractTypeConstructor.getSupertypes() (2 samples, 16.67%)</title><rect x="10.0" y="1125" width="305.0" height="15.0" fill="rgb(233,150,17)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >types.AbstractTypeConstructor.getSupertyp..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope$functions$1.invoke(Object) (1 samples, 8.33%)</title><rect x="1535.0" y="1477" width="152.5" height="15.0" fill="rgb(236,147,6)" rx="2" ry="2" />
<text  x="1538.00" y="1487.5" >descriptors.Deseria..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="741" width="152.5" height="15.0" fill="rgb(249,46,33)" rx="2" ry="2" />
<text  x="318.00" y="751.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtElementImplStub.accept(PsiElementVisitor) (1 samples, 8.33%)</title><rect x="315.0" y="693" width="152.5" height="15.0" fill="rgb(236,213,21)" rx="2" ry="2" />
<text  x="318.00" y="703.5" >psi.KtElementImplSt..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeElement(TypeResolutionContext, Annotations, KtModifierList, KtTypeElement) (1 samples, 8.33%)</title><rect x="772.5" y="1797" width="152.5" height="15.0" fill="rgb(232,180,1)" rx="2" ry="2" />
<text  x="775.50" y="1807.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>scopes.ChainedMemberScope.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="693" width="152.5" height="15.0" fill="rgb(232,201,43)" rx="2" ry="2" />
<text  x="1385.50" y="703.5" >scopes.ChainedMembe..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$3$resultWithoutCycles$1.invoke(Object) (1 samples, 8.33%)</title><rect x="10.0" y="917" width="152.5" height="15.0" fill="rgb(231,33,22)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>psi.KtTreeVisitorVoid.visitElement(PsiElement) (3 samples, 25.00%)</title><rect x="10.0" y="1941" width="457.5" height="15.0" fill="rgb(228,30,38)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" >psi.KtTreeVisitorVoid.visitElement(PsiElement)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitLambdaExpression(KtLambdaExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="469" width="152.5" height="15.0" fill="rgb(208,46,37)" rx="2" ry="2" />
<text  x="318.00" y="479.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtNamedFunction.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1701" width="152.5" height="15.0" fill="rgb(226,40,39)" rx="2" ry="2" />
<text  x="318.00" y="1711.5" >psi.KtNamedFunction..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$1.invoke() (1 samples, 8.33%)</title><rect x="10.0" y="821" width="152.5" height="15.0" fill="rgb(205,153,32)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>lazy.ExplicitImportsIndexed.importsForName(Name) (1 samples, 8.33%)</title><rect x="162.5" y="629" width="152.5" height="15.0" fill="rgb(246,196,7)" rx="2" ry="2" />
<text  x="165.50" y="639.5" >lazy.ExplicitImport..</text>
</g>
<g >
<title>lazy.LazyImportScope.getContributedClassifierIncludeDeprecated(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="773" width="152.5" height="15.0" fill="rgb(205,105,32)" rx="2" ry="2" />
<text  x="165.50" y="783.5" >lazy.LazyImportScop..</text>
</g>
<g >
<title>incremental.UtilsKt.record(LookupTracker, LookupLocation, PackageFragmentDescriptor, Name) (1 samples, 8.33%)</title><rect x="1382.5" y="661" width="152.5" height="15.0" fill="rgb(249,212,30)" rx="2" ry="2" />
<text  x="1385.50" y="671.5" >incremental.UtilsKt..</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="805" width="152.5" height="15.0" fill="rgb(230,48,53)" rx="2" ry="2" />
<text  x="318.00" y="815.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>types.AbstractTypeConstructor.getSupertypes() (2 samples, 16.67%)</title><rect x="10.0" y="1141" width="305.0" height="15.0" fill="rgb(213,73,35)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >types.AbstractTypeConstructor.getSupertyp..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.doGetClasses(Name) (1 samples, 8.33%)</title><rect x="772.5" y="1285" width="152.5" height="15.0" fill="rgb(235,48,34)" rx="2" ry="2" />
<text  x="775.50" y="1295.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>kotlinpoet.FileSpec.writeTo(Appendable) (2 samples, 16.67%)</title><rect x="467.5" y="2213" width="305.0" height="15.0" fill="rgb(251,52,41)" rx="2" ry="2" />
<text  x="470.50" y="2223.5" >kotlinpoet.FileSpec.writeTo(Appendable)</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="357" width="152.5" height="15.0" fill="rgb(225,200,40)" rx="2" ry="2" />
<text  x="318.00" y="367.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitArgument(KtValueArgument, Object) (1 samples, 8.33%)</title><rect x="315.0" y="661" width="152.5" height="15.0" fill="rgb(217,193,12)" rx="2" ry="2" />
<text  x="318.00" y="671.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>descriptors.AbstractLazyMemberScope.computeDescriptorsFromDeclaredElements(DescriptorKindFilter, Function1, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="2069" width="152.5" height="15.0" fill="rgb(224,76,51)" rx="2" ry="2" />
<text  x="775.50" y="2079.5" >descriptors.Abstrac..</text>
</g>
<g >
<title>compilerRunner.GradleKotlinCompilerWork$compileInProcess$future$1.call() (12 samples, 100.00%)</title><rect x="10.0" y="2821" width="1830.0" height="15.0" fill="rgb(229,153,52)" rx="2" ry="2" />
<text  x="13.00" y="2831.5" >compilerRunner.GradleKotlinCompilerWork$compileInProcess$future$1.call()</text>
</g>
<g >
<title>scopes.AbstractScopeAdapter.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="709" width="152.5" height="15.0" fill="rgb(212,191,30)" rx="2" ry="2" />
<text  x="1385.50" y="719.5" >scopes.AbstractScop..</text>
</g>
<g >
<title>metadata.ProtoBuf$Type.getSerializedSize() (1 samples, 8.33%)</title><rect x="1077.5" y="341" width="152.5" height="15.0" fill="rgb(232,158,42)" rx="2" ry="2" />
<text  x="1080.50" y="351.5" >metadata.ProtoBuf$T..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSizeNoTag(MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="357" width="152.5" height="15.0" fill="rgb(254,135,6)" rx="2" ry="2" />
<text  x="1080.50" y="367.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitCallExpression(KtCallExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="965" width="152.5" height="15.0" fill="rgb(250,67,10)" rx="2" ry="2" />
<text  x="318.00" y="975.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (5 samples, 41.67%)</title><rect x="925.0" y="1941" width="762.5" height="15.0" fill="rgb(206,123,33)" rx="2" ry="2" />
<text  x="928.00" y="1951.5" >calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallResolver$ResolutionTas..</text>
</g>
<g >
<title>sequences.GeneratorSequence$iterator$1.calcNext() (1 samples, 8.33%)</title><rect x="1535.0" y="1349" width="152.5" height="15.0" fill="rgb(225,50,26)" rx="2" ry="2" />
<text  x="1538.00" y="1359.5" >sequences.Generator..</text>
</g>
<g >
<title>psi.KtDotQualifiedExpression.accept(KtVisitor, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1317" width="152.5" height="15.0" fill="rgb(239,120,46)" rx="2" ry="2" />
<text  x="318.00" y="1327.5" >psi.KtDotQualifiedE..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1493" width="152.5" height="15.0" fill="rgb(252,70,38)" rx="2" ry="2" />
<text  x="318.00" y="1503.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>tower.PrioritizedCompositeScopeTowerProcessor.recordLookups(Collection, Name) (1 samples, 8.33%)</title><rect x="1382.5" y="805" width="152.5" height="15.0" fill="rgb(208,2,7)" rx="2" ry="2" />
<text  x="1385.50" y="815.5" >tower.PrioritizedCo..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="581" width="457.5" height="15.0" fill="rgb(216,62,35)" rx="2" ry="2" />
<text  x="928.00" y="591.5" >storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invo..</text>
</g>
<g >
<title>descriptors.ClassResolutionScopesSupport$scopeForStaticMemberDeclarationResolution$1.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1333" width="305.0" height="15.0" fill="rgb(217,107,38)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >descriptors.ClassResolutionScopesSupport$..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1061" width="152.5" height="15.0" fill="rgb(244,24,0)" rx="2" ry="2" />
<text  x="318.00" y="1071.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$1.invoke() (1 samples, 8.33%)</title><rect x="162.5" y="1077" width="152.5" height="15.0" fill="rgb(233,222,44)" rx="2" ry="2" />
<text  x="165.50" y="1087.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>psi.KtVisitor.visitCallExpression(KtCallExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="933" width="152.5" height="15.0" fill="rgb(238,56,14)" rx="2" ry="2" />
<text  x="318.00" y="943.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>resolve.TypeResolver.resolveTypeForClassifier(TypeResolutionContext, ClassifierDescriptor, QualifiedExpressionResolver$TypeQualifierResolutionResult, KtElement, Annotations) (1 samples, 8.33%)</title><rect x="772.5" y="1701" width="152.5" height="15.0" fill="rgb(240,131,28)" rx="2" ry="2" />
<text  x="775.50" y="1711.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>lazy.LazyImportResolver$allNames$2.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="741" width="457.5" height="15.0" fill="rgb(220,85,28)" rx="2" ry="2" />
<text  x="928.00" y="751.5" >lazy.LazyImportResolver$allNames$2.invoke()</text>
</g>
<g >
<title>common.CLICompiler.execImpl(MessageCollector, Services, CommonToolArguments) (12 samples, 100.00%)</title><rect x="10.0" y="2725" width="1830.0" height="15.0" fill="rgb(250,159,29)" rx="2" ry="2" />
<text  x="13.00" y="2735.5" >common.CLICompiler.execImpl(MessageCollector, Services, CommonToolArguments)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2133" width="457.5" height="15.0" fill="rgb(208,28,46)" rx="2" ry="2" />
<text  x="13.00" y="2143.5" >psi.KtVisitorVoid.visitDeclaration(KtDeclaration, Object)</text>
</g>
<g >
<title>psi.KtFile.accept(KtVisitor, Object) (12 samples, 100.00%)</title><rect x="10.0" y="2517" width="1830.0" height="15.0" fill="rgb(240,222,28)" rx="2" ry="2" />
<text  x="13.00" y="2527.5" >psi.KtFile.accept(KtVisitor, Object)</text>
</g>
<g >
<title>calls.CandidateResolver.performResolutionForCandidateCall(CallCandidateResolutionContext, CheckArgumentTypesMode) (5 samples, 41.67%)</title><rect x="925.0" y="1893" width="762.5" height="15.0" fill="rgb(225,151,25)" rx="2" ry="2" />
<text  x="928.00" y="1903.5" >calls.CandidateResolver.performResolutionForCandidateCall(CallCandidateResolutionContext, CheckArgumentTy..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (4 samples, 33.33%)</title><rect x="925.0" y="949" width="610.0" height="15.0" fill="rgb(224,46,10)" rx="2" ry="2" />
<text  x="928.00" y="959.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitLambdaExpression(KtLambdaExpression, Void) (1 samples, 8.33%)</title><rect x="315.0" y="453" width="152.5" height="15.0" fill="rgb(251,187,30)" rx="2" ry="2" />
<text  x="318.00" y="463.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>lazy.LazyImportResolver.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="741" width="152.5" height="15.0" fill="rgb(243,83,5)" rx="2" ry="2" />
<text  x="1385.50" y="751.5" >lazy.LazyImportReso..</text>
</g>
<g >
<title>calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallResolver$ResolutionTask, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="917" width="610.0" height="15.0" fill="rgb(209,145,46)" rx="2" ry="2" />
<text  x="928.00" y="927.5" >calls.CallResolver.doResolveCallOrGetCachedResults(BasicCallResolutionContext, CallR..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtFile(KtFile, Void) (12 samples, 100.00%)</title><rect x="10.0" y="2485" width="1830.0" height="15.0" fill="rgb(251,119,47)" rx="2" ry="2" />
<text  x="13.00" y="2495.5" >psi.KtVisitorVoid.visitKtFile(KtFile, Void)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(Object) (2 samples, 16.67%)</title><rect x="10.0" y="1509" width="305.0" height="15.0" fill="rgb(217,63,7)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >storage.LockBasedStorageManager$MapBasedM..</text>
</g>
<g >
<title>psi.PsiElementVisitor.visitFile(PsiFile) (12 samples, 100.00%)</title><rect x="10.0" y="2437" width="1830.0" height="15.0" fill="rgb(236,153,13)" rx="2" ry="2" />
<text  x="13.00" y="2447.5" >psi.PsiElementVisitor.visitFile(PsiFile)</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, ExpressionTypingContext, KtVisitor) (4 samples, 33.33%)</title><rect x="925.0" y="1381" width="610.0" height="15.0" fill="rgb(243,95,31)" rx="2" ry="2" />
<text  x="928.00" y="1391.5" >expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, Exp..</text>
</g>
<g >
<title>test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(Object) (2 samples, 16.67%)</title><rect x="10.0" y="1637" width="305.0" height="15.0" fill="rgb(249,67,44)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" >test.DiCompilerAnalysisExtension$doAnalys..</text>
</g>
<g >
<title>name.FqName.asString() (1 samples, 8.33%)</title><rect x="1382.5" y="645" width="152.5" height="15.0" fill="rgb(230,49,49)" rx="2" ry="2" />
<text  x="1385.50" y="655.5" >name.FqName.asStrin..</text>
</g>
<g >
<title>test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(KtClass) (8 samples, 66.67%)</title><rect x="467.5" y="2277" width="1220.0" height="15.0" fill="rgb(206,105,22)" rx="2" ry="2" />
<text  x="470.50" y="2287.5" >test.DiCompilerAnalysisExtension$doAnalysis$$inlined$forEach$lambda$1.invoke(KtClass)</text>
</g>
<g >
<title>resolve.TypeResolver$resolveTypeElement$1.visitUserType(KtUserType) (1 samples, 8.33%)</title><rect x="772.5" y="1541" width="152.5" height="15.0" fill="rgb(240,211,0)" rx="2" ry="2" />
<text  x="775.50" y="1551.5" >resolve.TypeResolve..</text>
</g>
<g >
<title>compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinCoreEnvironment, File, List) (12 samples, 100.00%)</title><rect x="10.0" y="2661" width="1830.0" height="15.0" fill="rgb(233,15,4)" rx="2" ry="2" />
<text  x="13.00" y="2671.5" >compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinCoreEnvironment, File, List)</text>
</g>
<g >
<title>messages.AnalyzerWithCompilerReport.analyzeAndReport(Collection, Function0) (12 samples, 100.00%)</title><rect x="10.0" y="2629" width="1830.0" height="15.0" fill="rgb(241,74,19)" rx="2" ry="2" />
<text  x="13.00" y="2639.5" >messages.AnalyzerWithCompilerReport.analyzeAndReport(Collection, Function0)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression) (1 samples, 8.33%)</title><rect x="315.0" y="1141" width="152.5" height="15.0" fill="rgb(237,73,1)" rx="2" ry="2" />
<text  x="318.00" y="1151.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolve.AllUnderImportScope.recordLookup(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1382.5" y="725" width="152.5" height="15.0" fill="rgb(239,186,32)" rx="2" ry="2" />
<text  x="1385.50" y="735.5" >resolve.AllUnderImp..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (3 samples, 25.00%)</title><rect x="10.0" y="1781" width="457.5" height="15.0" fill="rgb(224,112,21)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" >psi.KtVisitorVoid.visitKtElement(KtElement)</text>
</g>
<g >
<title>metadata.ProtoBuf$ValueParameter.getSerializedSize() (1 samples, 8.33%)</title><rect x="1077.5" y="389" width="152.5" height="15.0" fill="rgb(209,28,31)" rx="2" ry="2" />
<text  x="1080.50" y="399.5" >metadata.ProtoBuf$V..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="485" width="152.5" height="15.0" fill="rgb(215,210,1)" rx="2" ry="2" />
<text  x="928.00" y="495.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement) (1 samples, 8.33%)</title><rect x="315.0" y="757" width="152.5" height="15.0" fill="rgb(233,130,5)" rx="2" ry="2" />
<text  x="318.00" y="767.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>source.CharTableImpl.intern(CharSequence, int, int) (1 samples, 8.33%)</title><rect x="315.0" y="53" width="152.5" height="15.0" fill="rgb(208,13,9)" rx="2" ry="2" />
<text  x="318.00" y="63.5" >source.CharTableImp..</text>
</g>
<g >
<title>kotlinpoet.FileSpec.writeTo(Path) (2 samples, 16.67%)</title><rect x="467.5" y="2229" width="305.0" height="15.0" fill="rgb(218,66,16)" rx="2" ry="2" />
<text  x="470.50" y="2239.5" >kotlinpoet.FileSpec.writeTo(Path)</text>
</g>
<g >
<title>storage.StorageKt.getValue(NotNullLazyValue, Object, KProperty) (1 samples, 8.33%)</title><rect x="925.0" y="501" width="152.5" height="15.0" fill="rgb(254,171,1)" rx="2" ry="2" />
<text  x="928.00" y="511.5" >storage.StorageKt.g..</text>
</g>
<g >
<title>compilerRunner.GradleKotlinCompilerWork.access$compileInProcessImpl(GradleKotlinCompilerWork, MessageCollector) (12 samples, 100.00%)</title><rect x="10.0" y="2805" width="1830.0" height="15.0" fill="rgb(241,187,9)" rx="2" ry="2" />
<text  x="13.00" y="2815.5" >compilerRunner.GradleKotlinCompilerWork.access$compileInProcessImpl(GradleKotlinCompilerWork, MessageCollector)</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope.&lt;init&gt;(DeserializationContext, Collection, Collection, Collection, Function0) (2 samples, 16.67%)</title><rect x="1077.5" y="485" width="305.0" height="15.0" fill="rgb(249,44,15)" rx="2" ry="2" />
<text  x="1080.50" y="495.5" >descriptors.DeserializedMemberScope.&lt;init..</text>
</g>
<g >
<title>kotlin.DeserializedDescriptorResolver.createKotlinPackagePartScope(PackageFragmentDescriptor, KotlinJvmBinaryClass) (2 samples, 16.67%)</title><rect x="1077.5" y="517" width="305.0" height="15.0" fill="rgb(220,28,29)" rx="2" ry="2" />
<text  x="1080.50" y="527.5" >kotlin.DeserializedDescriptorResolver.cre..</text>
</g>
<g >
<title>descriptors.LazyClassDescriptor.getOuterScope() (2 samples, 16.67%)</title><rect x="10.0" y="1413" width="305.0" height="15.0" fill="rgb(240,51,31)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >descriptors.LazyClassDescriptor.getOuterS..</text>
</g>
<g >
<title>types.AbstractTypeConstructor.computeNeighbours(TypeConstructor, boolean) (1 samples, 8.33%)</title><rect x="10.0" y="869" width="152.5" height="15.0" fill="rgb(213,202,15)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>descriptors.JvmPackageScope$kotlinScopes$2.invoke() (3 samples, 25.00%)</title><rect x="925.0" y="533" width="457.5" height="15.0" fill="rgb(239,71,10)" rx="2" ry="2" />
<text  x="928.00" y="543.5" >descriptors.JvmPackageScope$kotlinScopes$2.invoke()</text>
</g>
<g >
<title>scopes.InnerClassesScopeWrapper.getContributedClassifier(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="772.5" y="1397" width="152.5" height="15.0" fill="rgb(250,3,13)" rx="2" ry="2" />
<text  x="775.50" y="1407.5" >scopes.InnerClasses..</text>
</g>
<g >
<title>metadata.ProtoBuf$Type.writeTo(CodedOutputStream) (1 samples, 8.33%)</title><rect x="1230.0" y="389" width="152.5" height="15.0" fill="rgb(224,135,41)" rx="2" ry="2" />
<text  x="1233.00" y="399.5" >metadata.ProtoBuf$T..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject, Void) (3 samples, 25.00%)</title><rect x="10.0" y="2245" width="457.5" height="15.0" fill="rgb(209,108,13)" rx="2" ry="2" />
<text  x="13.00" y="2255.5" >psi.KtVisitorVoid.visitClassOrObject(KtClassOrObject, Void)</text>
</g>
<g >
<title>jvm.K2JVMCompiler.doExecute(CommonCompilerArguments, CompilerConfiguration, Disposable, KotlinPaths) (12 samples, 100.00%)</title><rect x="10.0" y="2693" width="1830.0" height="15.0" fill="rgb(225,94,38)" rx="2" ry="2" />
<text  x="13.00" y="2703.5" >jvm.K2JVMCompiler.doExecute(CommonCompilerArguments, CompilerConfiguration, Disposable, KotlinPaths)</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (4 samples, 33.33%)</title><rect x="925.0" y="1397" width="610.0" height="15.0" fill="rgb(244,155,42)" rx="2" ry="2" />
<text  x="928.00" y="1407.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration) (1 samples, 8.33%)</title><rect x="315.0" y="1525" width="152.5" height="15.0" fill="rgb(245,224,21)" rx="2" ry="2" />
<text  x="318.00" y="1535.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedFunction(KtNamedFunction) (1 samples, 8.33%)</title><rect x="315.0" y="1653" width="152.5" height="15.0" fill="rgb(240,217,11)" rx="2" ry="2" />
<text  x="318.00" y="1663.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>kotlin.KotlinClassFinderKt.findKotlinClass(KotlinClassFinder, ClassId) (1 samples, 8.33%)</title><rect x="925.0" y="421" width="152.5" height="15.0" fill="rgb(208,136,26)" rx="2" ry="2" />
<text  x="928.00" y="431.5" >kotlin.KotlinClassF..</text>
</g>
<g >
<title>all (12 samples, 100%)</title><rect x="10.0" y="2853" width="1830.0" height="15.0" fill="rgb(230,101,46)" rx="2" ry="2" />
<text  x="13.00" y="2863.5" ></text>
</g>
<g >
<title>expressions.BasicExpressionTypingVisitor.visitSimpleNameExpression(KtSimpleNameExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1061" width="610.0" height="15.0" fill="rgb(252,44,30)" rx="2" ry="2" />
<text  x="928.00" y="1071.5" >expressions.BasicExpressionTypingVisitor.visitSimpleNameExpression(KtSimpleNameExpre..</text>
</g>
<g >
<title>descriptors.DeserializedPackageMemberScope.&lt;init&gt;(PackageFragmentDescriptor, ProtoBuf$Package, NameResolver, BinaryVersion, DeserializedContainerSource, DeserializationComponents, Function0) (2 samples, 16.67%)</title><rect x="1077.5" y="501" width="305.0" height="15.0" fill="rgb(250,37,4)" rx="2" ry="2" />
<text  x="1080.50" y="511.5" >descriptors.DeserializedPackageMemberScop..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitKtElement(KtElement, Object) (5 samples, 41.67%)</title><rect x="925.0" y="1685" width="762.5" height="15.0" fill="rgb(227,109,40)" rx="2" ry="2" />
<text  x="928.00" y="1695.5" >expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitKtElement(KtElement, Object)</text>
</g>
<g >
<title>sequences.TransformingSequence$iterator$1.next() (2 samples, 16.67%)</title><rect x="10.0" y="1525" width="305.0" height="15.0" fill="rgb(213,14,4)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >sequences.TransformingSequence$iterator$1..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (1 samples, 8.33%)</title><rect x="925.0" y="293" width="152.5" height="15.0" fill="rgb(213,178,35)" rx="2" ry="2" />
<text  x="928.00" y="303.5" >util.PerformanceCou..</text>
</g>
<g >
<title>scopes.HierarchicalScope$DefaultImpls.getContributedClassifierIncludeDeprecated(HierarchicalScope, Name, LookupLocation) (1 samples, 8.33%)</title><rect x="162.5" y="741" width="152.5" height="15.0" fill="rgb(216,16,42)" rx="2" ry="2" />
<text  x="165.50" y="751.5" >scopes.Hierarchical..</text>
</g>
<g >
<title>calls.CandidateResolver.checkValueArgumentTypes(CallResolutionContext, MutableResolvedCall, ResolveArgumentsMode) (5 samples, 41.67%)</title><rect x="925.0" y="1845" width="762.5" height="15.0" fill="rgb(228,170,29)" rx="2" ry="2" />
<text  x="928.00" y="1855.5" >calls.CandidateResolver.checkValueArgumentTypes(CallResolutionContext, MutableResolvedCall, ResolveArgume..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitExpression(KtExpression) (1 samples, 8.33%)</title><rect x="315.0" y="821" width="152.5" height="15.0" fill="rgb(233,99,32)" rx="2" ry="2" />
<text  x="318.00" y="831.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>resolver.DaggerComponentDescriptor.&lt;init&gt;(ClassDescriptor, KtFile, ResolverContext) (6 samples, 50.00%)</title><rect x="772.5" y="2261" width="915.0" height="15.0" fill="rgb(226,49,46)" rx="2" ry="2" />
<text  x="775.50" y="2271.5" >resolver.DaggerComponentDescriptor.&lt;init&gt;(ClassDescriptor, KtFile, ResolverContext)</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (3 samples, 25.00%)</title><rect x="10.0" y="2021" width="457.5" height="15.0" fill="rgb(244,133,52)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" >psi.KtVisitor.visitExpression(KtExpression, Object)</text>
</g>
<g >
<title>expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext) (4 samples, 33.33%)</title><rect x="925.0" y="1189" width="610.0" height="15.0" fill="rgb(214,112,33)" rx="2" ry="2" />
<text  x="928.00" y="1199.5" >expressions.ExpressionTypingServices.getTypeInfo(KtExpression, ResolutionContext)</text>
</g>
<g >
<title>storage.LockBasedStorageManager.compute(Function0) (1 samples, 8.33%)</title><rect x="162.5" y="677" width="152.5" height="15.0" fill="rgb(254,68,49)" rx="2" ry="2" />
<text  x="165.50" y="687.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>renderer.DaggerComponentRenderer.render(File) (2 samples, 16.67%)</title><rect x="467.5" y="2261" width="305.0" height="15.0" fill="rgb(236,77,10)" rx="2" ry="2" />
<text  x="470.50" y="2271.5" >renderer.DaggerComponentRenderer.render(F..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitDeclaration(KtDeclaration) (3 samples, 25.00%)</title><rect x="10.0" y="2101" width="457.5" height="15.0" fill="rgb(227,22,44)" rx="2" ry="2" />
<text  x="13.00" y="2111.5" >psi.KtVisitorVoid.visitDeclaration(KtDeclaration)</text>
</g>
<g >
<title>calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionContext, Collection, TracingStrategy) (4 samples, 33.33%)</title><rect x="925.0" y="1557" width="610.0" height="15.0" fill="rgb(218,147,1)" rx="2" ry="2" />
<text  x="928.00" y="1567.5" >calls.CallResolver.computeTasksFromCandidatesAndResolvedCall(BasicCallResolutionCont..</text>
</g>
<g >
<title>descriptors.DeserializedMemberScope$functions$1.invoke(Name) (1 samples, 8.33%)</title><rect x="1535.0" y="1461" width="152.5" height="15.0" fill="rgb(224,131,1)" rx="2" ry="2" />
<text  x="1538.00" y="1471.5" >descriptors.Deseria..</text>
</g>
<g >
<title>expressions.DoubleColonExpressionResolver.tryResolveLHS(KtDoubleColonExpression, ExpressionTypingContext, Function1, Function2) (4 samples, 33.33%)</title><rect x="925.0" y="1269" width="610.0" height="15.0" fill="rgb(219,133,24)" rx="2" ry="2" />
<text  x="928.00" y="1279.5" >expressions.DoubleColonExpressionResolver.tryResolveLHS(KtDoubleColonExpression, Exp..</text>
</g>
<g >
<title>elements.KtFileElementType.doParseContents(ASTNode, PsiElement) (1 samples, 8.33%)</title><rect x="1687.5" y="2277" width="152.5" height="15.0" fill="rgb(227,118,21)" rx="2" ry="2" />
<text  x="1690.50" y="2287.5" >elements.KtFileElem..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (1 samples, 8.33%)</title><rect x="925.0" y="469" width="152.5" height="15.0" fill="rgb(249,17,10)" rx="2" ry="2" />
<text  x="928.00" y="479.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClass(KtClass, Void) (2 samples, 16.67%)</title><rect x="10.0" y="1669" width="305.0" height="15.0" fill="rgb(234,26,29)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" >psi.KtVisitorVoid.visitClass(KtClass, Void)</text>
</g>
<g >
<title>psi.VisitorWrappersKt$classRecursiveVisitor$1.visitClass(KtClass) (11 samples, 91.67%)</title><rect x="10.0" y="2309" width="1677.5" height="15.0" fill="rgb(219,23,44)" rx="2" ry="2" />
<text  x="13.00" y="2319.5" >psi.VisitorWrappersKt$classRecursiveVisitor$1.visitClass(KtClass)</text>
</g>
<g >
<title>scopes.ChainedMemberScope.getContributedFunctions(Name, LookupLocation) (1 samples, 8.33%)</title><rect x="1535.0" y="1541" width="152.5" height="15.0" fill="rgb(234,2,24)" rx="2" ry="2" />
<text  x="1538.00" y="1551.5" >scopes.ChainedMembe..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitReferenceExpression(KtReferenceExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="917" width="152.5" height="15.0" fill="rgb(237,5,41)" rx="2" ry="2" />
<text  x="318.00" y="927.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (3 samples, 25.00%)</title><rect x="10.0" y="1989" width="457.5" height="15.0" fill="rgb(223,98,2)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" >psi.KtVisitorVoid.visitKtElement(KtElement, Void)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitClassBody(KtClassBody) (3 samples, 25.00%)</title><rect x="10.0" y="1845" width="457.5" height="15.0" fill="rgb(246,18,40)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" >psi.KtVisitorVoid.visitClassBody(KtClassBody)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1109" width="305.0" height="15.0" fill="rgb(250,4,12)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Void) (1 samples, 8.33%)</title><rect x="315.0" y="1093" width="152.5" height="15.0" fill="rgb(248,129,17)" rx="2" ry="2" />
<text  x="318.00" y="1103.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitArgument(KtValueArgument, Void) (1 samples, 8.33%)</title><rect x="315.0" y="645" width="152.5" height="15.0" fill="rgb(220,114,21)" rx="2" ry="2" />
<text  x="318.00" y="655.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>metadata.ProtoBuf$Function$1.parsePartialFrom(CodedInputStream, ExtensionRegistryLite) (1 samples, 8.33%)</title><rect x="1535.0" y="1237" width="152.5" height="15.0" fill="rgb(210,128,41)" rx="2" ry="2" />
<text  x="1538.00" y="1247.5" >metadata.ProtoBuf$F..</text>
</g>
<g >
<title>util.PerformanceCounter.time(Function0) (4 samples, 33.33%)</title><rect x="925.0" y="1141" width="610.0" height="15.0" fill="rgb(221,126,48)" rx="2" ry="2" />
<text  x="928.00" y="1151.5" >util.PerformanceCounter.time(Function0)</text>
</g>
<g >
<title>psi.KtVisitor.visitExpression(KtExpression, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1125" width="152.5" height="15.0" fill="rgb(246,229,53)" rx="2" ry="2" />
<text  x="318.00" y="1135.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.computeMessageSize(int, MessageLite) (1 samples, 8.33%)</title><rect x="1077.5" y="373" width="152.5" height="15.0" fill="rgb(208,34,4)" rx="2" ry="2" />
<text  x="1080.50" y="383.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Void) (3 samples, 25.00%)</title><rect x="10.0" y="2181" width="457.5" height="15.0" fill="rgb(253,119,13)" rx="2" ry="2" />
<text  x="13.00" y="2191.5" >psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration, Vo..</text>
</g>
<g >
<title>protobuf.CodedOutputStream.writeMessageNoTag(MessageLite) (1 samples, 8.33%)</title><rect x="1230.0" y="405" width="152.5" height="15.0" fill="rgb(212,152,39)" rx="2" ry="2" />
<text  x="1233.00" y="415.5" >protobuf.CodedOutpu..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitNamedDeclaration(KtNamedDeclaration) (1 samples, 8.33%)</title><rect x="315.0" y="1589" width="152.5" height="15.0" fill="rgb(226,178,25)" rx="2" ry="2" />
<text  x="318.00" y="1599.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>psi.KtVisitor.visitKtElement(KtElement, Object) (1 samples, 8.33%)</title><rect x="315.0" y="1381" width="152.5" height="15.0" fill="rgb(252,211,32)" rx="2" ry="2" />
<text  x="318.00" y="1391.5" >psi.KtVisitor.visit..</text>
</g>
<g >
<title>calls.ArgumentTypeResolver.getArgumentTypeInfo(KtExpression, CallResolutionContext, ResolveArgumentsMode, boolean) (5 samples, 41.67%)</title><rect x="925.0" y="1829" width="762.5" height="15.0" fill="rgb(248,52,53)" rx="2" ry="2" />
<text  x="928.00" y="1839.5" >calls.ArgumentTypeResolver.getArgumentTypeInfo(KtExpression, CallResolutionContext, ResolveArgumentsMode,..</text>
</g>
<g >
<title>asm.ClassReader.accept(ClassVisitor, Attribute[], int) (1 samples, 8.33%)</title><rect x="925.0" y="213" width="152.5" height="15.0" fill="rgb(237,162,49)" rx="2" ry="2" />
<text  x="928.00" y="223.5" >asm.ClassReader.acc..</text>
</g>
<g >
<title>storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(Object) (1 samples, 8.33%)</title><rect x="772.5" y="2021" width="152.5" height="15.0" fill="rgb(245,134,29)" rx="2" ry="2" />
<text  x="775.50" y="2031.5" >storage.LockBasedSt..</text>
</g>
<g >
<title>lazy.LazyImportResolver.definitelyDoesNotContainName(Name) (3 samples, 25.00%)</title><rect x="925.0" y="789" width="457.5" height="15.0" fill="rgb(213,10,37)" rx="2" ry="2" />
<text  x="928.00" y="799.5" >lazy.LazyImportResolver.definitelyDoesNotContainName(Name)</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitLambdaExpression(KtLambdaExpression) (1 samples, 8.33%)</title><rect x="315.0" y="437" width="152.5" height="15.0" fill="rgb(222,55,33)" rx="2" ry="2" />
<text  x="318.00" y="447.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, ExpressionTypingContext, KtVisitor) (5 samples, 41.67%)</title><rect x="925.0" y="1749" width="762.5" height="15.0" fill="rgb(253,98,3)" rx="2" ry="2" />
<text  x="928.00" y="1759.5" >expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(KtExpression, ExpressionTypingContext,..</text>
</g>
<g >
<title>asm.ClassReader.readUtf(int, char[]) (1 samples, 8.33%)</title><rect x="925.0" y="181" width="152.5" height="15.0" fill="rgb(227,26,48)" rx="2" ry="2" />
<text  x="928.00" y="191.5" >asm.ClassReader.rea..</text>
</g>
<g >
<title>tree.TreeElement.getElementType() (1 samples, 8.33%)</title><rect x="1687.5" y="2149" width="152.5" height="15.0" fill="rgb(250,102,35)" rx="2" ry="2" />
<text  x="1690.50" y="2159.5" >tree.TreeElement.ge..</text>
</g>
<g >
<title>tree.LazyParseableElement.getFirstChildNode() (1 samples, 8.33%)</title><rect x="315.0" y="229" width="152.5" height="15.0" fill="rgb(235,141,20)" rx="2" ry="2" />
<text  x="318.00" y="239.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>descriptors.LazyAnnotationDescriptor$allValueArguments$2.invoke() (5 samples, 41.67%)</title><rect x="925.0" y="2101" width="762.5" height="15.0" fill="rgb(213,129,37)" rx="2" ry="2" />
<text  x="928.00" y="2111.5" >descriptors.LazyAnnotationDescriptor$allValueArguments$2.invoke()</text>
</g>
<g >
<title>creator.DaggerFactoryDescriptor.parseDefinition() (1 samples, 8.33%)</title><rect x="772.5" y="2213" width="152.5" height="15.0" fill="rgb(209,129,10)" rx="2" ry="2" />
<text  x="775.50" y="2223.5" >creator.DaggerFacto..</text>
</g>
<g >
<title>types.AbstractTypeConstructor$supertypes$3$resultWithoutCycles$1.invoke(TypeConstructor) (1 samples, 8.33%)</title><rect x="10.0" y="901" width="152.5" height="15.0" fill="rgb(237,199,18)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >types.AbstractTypeC..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitKtElement(KtElement, Object) (3 samples, 25.00%)</title><rect x="10.0" y="1813" width="457.5" height="15.0" fill="rgb(224,23,27)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >psi.KtVisitorVoid.visitKtElement(KtElement, Object)</text>
</g>
<g >
<title>descriptors.LazyJavaPackageFragment.getBinaryClasses$descriptors_jvm() (1 samples, 8.33%)</title><rect x="925.0" y="517" width="152.5" height="15.0" fill="rgb(243,216,17)" rx="2" ry="2" />
<text  x="928.00" y="527.5" >descriptors.LazyJav..</text>
</g>
<g >
<title>tree.LazyParseableElement.ensureParsed() (1 samples, 8.33%)</title><rect x="315.0" y="213" width="152.5" height="15.0" fill="rgb(212,144,42)" rx="2" ry="2" />
<text  x="318.00" y="223.5" >tree.LazyParseableE..</text>
</g>
<g >
<title>expressions.ExpressionTypingVisitorDispatcher.visitSimpleNameExpression(KtSimpleNameExpression, ExpressionTypingContext) (4 samples, 33.33%)</title><rect x="925.0" y="1077" width="610.0" height="15.0" fill="rgb(239,82,17)" rx="2" ry="2" />
<text  x="928.00" y="1087.5" >expressions.ExpressionTypingVisitorDispatcher.visitSimpleNameExpression(KtSimpleName..</text>
</g>
<g >
<title>psi.KtVisitorVoid.visitUserType(KtUserType, Void) (1 samples, 8.33%)</title><rect x="162.5" y="869" width="152.5" height="15.0" fill="rgb(254,147,2)" rx="2" ry="2" />
<text  x="165.50" y="879.5" >psi.KtVisitorVoid.v..</text>
</g>
<g >
<title>collections.EmptyMap.getEntries() (1 samples, 8.33%)</title><rect x="467.5" y="2021" width="152.5" height="15.0" fill="rgb(243,84,23)" rx="2" ry="2" />
<text  x="470.50" y="2031.5" >collections.EmptyMa..</text>
</g>
<g >
<title>resolve.AnnotationResolverImpl.resolveAnnotationCall(KtAnnotationEntry, LexicalScope, BindingTrace) (5 samples, 41.67%)</title><rect x="925.0" y="2085" width="762.5" height="15.0" fill="rgb(215,223,0)" rx="2" ry="2" />
<text  x="928.00" y="2095.5" >resolve.AnnotationResolverImpl.resolveAnnotationCall(KtAnnotationEntry, LexicalScope, BindingTrace)</text>
</g>
<g >
<title>storage.LockBasedStorageManager$LockBasedLazyValue.invoke() (2 samples, 16.67%)</title><rect x="10.0" y="1349" width="305.0" height="15.0" fill="rgb(241,222,9)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >storage.LockBasedStorageManager$LockBased..</text>
</g>
<g >
<title>resolve.SupertypeLoopCheckerImpl$findLoopsInSupertypesAndDisconnect$graph$1.getNeighbors(TypeConstructor) (1 samples, 8.33%)</title><rect x="10.0" y="933" width="152.5" height="15.0" fill="rgb(236,37,47)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >resolve.SupertypeLo..</text>
</g>
</g>
</svg>
